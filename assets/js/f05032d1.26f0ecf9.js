"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5767],{3236:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>c,contentTitle:()=>s,default:()=>o,frontMatter:()=>l,metadata:()=>d,toc:()=>_});var t=i(5893),r=i(1151);const l={sidebar_position:12},s="GE \u5f00\u53d1\u6307\u5357",d={id:"D213-DevKit/part3/06-1_GE-Useguide",title:"GE \u5f00\u53d1\u6307\u5357",description:"1 \u6a21\u5757\u4ecb\u7ecd",source:"@site/docs/D213-DevKit/part3/06-1_GE-Useguide.md",sourceDirName:"D213-DevKit/part3",slug:"/D213-DevKit/part3/06-1_GE-Useguide",permalink:"/docs/D213-DevKit/part3/06-1_GE-Useguide",draft:!1,unlisted:!1,editUrl:"https://github.com/100askTeam/ArtInChip-Docs/tree/master/docs/D213-DevKit/part3/06-1_GE-Useguide.md",tags:[],version:"current",sidebarPosition:12,frontMatter:{sidebar_position:12},sidebar:"d213dkSidebar",previous:{title:"\u6587\u4ef6\u7cfb\u7edf\u4f7f\u7528\u6307\u5357",permalink:"/docs/D213-DevKit/part3/05-4_FileSystemUserGuide"},next:{title:"VE \u4f7f\u7528\u6307\u5357",permalink:"/docs/D213-DevKit/part3/06-2_VE-Useguide"}},c={},_=[{value:"1 \u6a21\u5757\u4ecb\u7ecd",id:"1-\u6a21\u5757\u4ecb\u7ecd",level:2},{value:"1.1. \u672f\u8bed\u5b9a\u4e49",id:"11-\u672f\u8bed\u5b9a\u4e49",level:3},{value:"1.2. \u6a21\u5757\u7b80\u4ecb",id:"12-\u6a21\u5757\u7b80\u4ecb",level:3},{value:"1.2.1. \u539f\u7406\u6846\u56fe",id:"121-\u539f\u7406\u6846\u56fe",level:4},{value:"2. \u53c2\u6570\u914d\u7f6e",id:"2-\u53c2\u6570\u914d\u7f6e",level:2},{value:"2.1. \u5185\u6838\u914d\u7f6e",id:"21-\u5185\u6838\u914d\u7f6e",level:3},{value:"2.1.1. \u6253\u5f00 CMA",id:"211-\u6253\u5f00-cma",level:4},{value:"2.1.2. \u6253\u5f00 dma-buf",id:"212-\u6253\u5f00-dma-buf",level:4},{value:"2.1.3. \u6253\u5f00 GE",id:"213-\u6253\u5f00-ge",level:4},{value:"2.2. DTS \u53c2\u6570\u914d\u7f6e",id:"22-dts-\u53c2\u6570\u914d\u7f6e",level:3},{value:"3. \u8c03\u8bd5\u6307\u5357",id:"3-\u8c03\u8bd5\u6307\u5357",level:2},{value:"3.1. \u8c03\u8bd5\u5f00\u5173",id:"31-\u8c03\u8bd5\u5f00\u5173",level:3},{value:"4. \u6d4b\u8bd5\u6307\u5357",id:"4-\u6d4b\u8bd5\u6307\u5357",level:2},{value:"5. \u8bbe\u8ba1\u8bf4\u660e",id:"5-\u8bbe\u8ba1\u8bf4\u660e",level:2},{value:"5.1. \u6e90\u7801\u8bf4\u660e",id:"51-\u6e90\u7801\u8bf4\u660e",level:3},{value:"5.2. \u975e\u547d\u4ee4\u961f\u5217\u6a21\u5f0f",id:"52-\u975e\u547d\u4ee4\u961f\u5217\u6a21\u5f0f",level:3},{value:"5.2.1. \u5173\u952e\u6d41\u7a0b\u8bbe\u8ba1",id:"521-\u5173\u952e\u6d41\u7a0b\u8bbe\u8ba1",level:4},{value:"5.3. \u547d\u4ee4\u961f\u5217\u6a21\u5f0f",id:"53-\u547d\u4ee4\u961f\u5217\u6a21\u5f0f",level:3},{value:"5.3.1. \u521d\u59cb\u5316\u6d41\u7a0b",id:"531-\u521d\u59cb\u5316\u6d41\u7a0b",level:4},{value:"5.3.2. batch\u7ba1\u7406",id:"532-batch\u7ba1\u7406",level:4},{value:"5.3.3. \u591a\u8fdb\u7a0b\u652f\u6301",id:"533-\u591a\u8fdb\u7a0b\u652f\u6301",level:4},{value:"5.4. \u6570\u636e\u7ed3\u6784\u8bbe\u8ba1",id:"54-\u6570\u636e\u7ed3\u6784\u8bbe\u8ba1",level:3},{value:"5.4.1. enum ge_pd_rules",id:"541-enum-ge_pd_rules",level:4},{value:"5.4.2. struct ge_ctrl",id:"542-struct-ge_ctrl",level:4},{value:"5.4.3. enum ge_fillrect_type",id:"543-enum-ge_fillrect_type",level:4},{value:"5.4.4. struct ge_fillrect",id:"544-struct-ge_fillrect",level:4},{value:"5.4.5. struct ge_bitblt\xb6",id:"545-struct-ge_bitblt",level:4},{value:"5.4.6. struct ge_bitblt\xb6",id:"546-struct-ge_bitblt",level:4},{value:"5.4.7. enum ge_mode\xb6",id:"547-enum-ge_mode",level:4},{value:"5.5. \u63a5\u53e3\u8bbe\u8ba1",id:"55-\u63a5\u53e3\u8bbe\u8ba1",level:3},{value:"5.5.1. IOC_GE_VERSION",id:"551-ioc_ge_version",level:4},{value:"5.5.2. IOC_GE_MODE",id:"552-ioc_ge_mode",level:4},{value:"6.5.5.3. IOC_GE_FILLRECT",id:"6553-ioc_ge_fillrect",level:3},{value:"5.5.4. IOC_GE_BITBLT",id:"554-ioc_ge_bitblt",level:4},{value:"5.5.5. IOC_GE_ROTATE",id:"555-ioc_ge_rotate",level:4},{value:"5.5.6. IOC_GE_SYNC",id:"556-ioc_ge_sync",level:4},{value:"5.5.7. IOC_GE_CMD_BUF_SIZE",id:"557-ioc_ge_cmd_buf_size",level:4},{value:"5.5.8. IOC_GE_ADD_DMA_BUF",id:"558-ioc_ge_add_dma_buf",level:4},{value:"5.5.9. IOC_GE_RM_DMA_BUF",id:"559-ioc_ge_rm_dma_buf",level:4},{value:"5.6. MPP\u5bf9GE\u63a5\u53e3\u7684\u5c01\u88c5",id:"56-mpp\u5bf9ge\u63a5\u53e3\u7684\u5c01\u88c5",level:3},{value:"5.6. mpp_ge_open",id:"56-mpp_ge_open",level:4},{value:"5.6.2. mpp_ge_close",id:"562-mpp_ge_close",level:4},{value:"5.6.3. mpp_ge_get_mode",id:"563-mpp_ge_get_mode",level:4},{value:"5.6.4. mpp_ge_add_dmabuf",id:"564-mpp_ge_add_dmabuf",level:4},{value:"5.6.5. mpp_ge_rm_dmabuf",id:"565-mpp_ge_rm_dmabuf",level:4},{value:"5.6.6. mpp_ge_fillrect",id:"566-mpp_ge_fillrect",level:4},{value:"5.6.7. mpp_ge_bitblt",id:"567-mpp_ge_bitblt",level:4},{value:"5.6.8. mpp_ge_rotate",id:"568-mpp_ge_rotate",level:4},{value:"5.6.9. mpp_ge_emit",id:"569-mpp_ge_emit",level:4},{value:"5.60. mpp_ge_sync",id:"560-mpp_ge_sync",level:4},{value:"5.7. APP \u53c2\u8003",id:"57-app-\u53c2\u8003",level:3},{value:"6. \u5e38\u89c1\u95ee\u9898",id:"6-\u5e38\u89c1\u95ee\u9898",level:2}];function a(n){const e={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"ge-\u5f00\u53d1\u6307\u5357",children:"GE \u5f00\u53d1\u6307\u5357"}),"\n",(0,t.jsx)(e.h2,{id:"1-\u6a21\u5757\u4ecb\u7ecd",children:"1 \u6a21\u5757\u4ecb\u7ecd"}),"\n",(0,t.jsx)(e.h3,{id:"11-\u672f\u8bed\u5b9a\u4e49",children:"1.1. \u672f\u8bed\u5b9a\u4e49"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"| \u672f\u8bed | \u5b9a\u4e49                   | \u6ce8\u91ca\u8bf4\u660e       |\n| ---- | ---------------------- | -------------- |\n| GE   | Graphics Engine        | 2D\u56fe\u5f62\u52a0\u901f\u5f15\u64ce |\n| blit | bit block transfer     | \u4f4d\u5757\u642c\u79fb       |\n| MPP  | Media Prosess Platform | \u591a\u5a92\u4f53\u5904\u7406\u5e73\u53f0 |\n"})}),"\n",(0,t.jsx)(e.h3,{id:"12-\u6a21\u5757\u7b80\u4ecb",children:"1.2. \u6a21\u5757\u7b80\u4ecb"}),"\n",(0,t.jsx)(e.p,{children:"GE(Graphics Engine)\u6a21\u5757\u662f\u4e00\u4e2a\u7528\u6765\u8fdb\u884c2D\u56fe\u5f62\u52a0\u901f\u7684\u786c\u4ef6\u6a21\u5757\u3002\u4e3b\u8981\u5305\u62ec\u683c\u5f0f\u8f6c\u6362\u3001\u65cb\u8f6c\u3001 \u955c\u50cf\u3001\u7f29\u653e\u3001Alpha\u6df7\u5408\u3001Color Key\u3001\u4f4d\u5757\u642c\u79fb\u3001Dither\u7b49\u529f\u80fd\u3002"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"- \u6700\u5927\u8f93\u5165/\u8f93\u51fa\u56fe\u50cf\u5927\u5c0f4096x4096\n- \u652f\u6301RGB\u8f6cYUV\uff0c\u652f\u6301YUV\u8f6cRGB\n- \u652f\u6301\u7684RGB\u683c\u5f0f\u5305\u62ec\uff1aARGB8888/XRGB8888/RGB888/ARGB4444/ARGB1555/RGB565\n- \u652f\u6301\u7684YUV\u683c\u5f0f\u5305\u62ec\uff1aYUV420P/NV12/NV21/YUV422P/NV16/NV61/YUYV/YVYU/UYVY/VYUY\n- \u652f\u6301\u6c34\u5e73\u548c\u5782\u76f4Flip\n- \u6240\u6709\u683c\u5f0f\u652f\u630190/180/270\u5ea6\u65cb\u8f6c\n- RGB\u683c\u5f0f\u652f\u6301\u4efb\u610f\u89d2\u5ea6\u65cb\u8f6c\n- \u652f\u63011/16x ~ 16x\u7f29\u653e\n- \u652f\u6301porter-duff\u89c4\u5219\u7684Alpha\u6df7\u5408\n- \u652f\u6301Color Key\n- \u652f\u6301\u77e9\u5f62\u586b\u5145\n- \u4f4d\u5757\u642c\u79fb(bit block transfer)\n- \u652f\u6301\u8bef\u5dee\u6269\u6563Dither\n"})}),"\n",(0,t.jsx)(e.h4,{id:"121-\u539f\u7406\u6846\u56fe",children:"1.2.1. \u539f\u7406\u6846\u56fe"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{src:"https://photos.100ask.net/artinchip-docs/d213-devkit/ge_overview_block1.png",alt:"../../../_https://photos.100ask.net/artinchip-docs/d213-devkit/ge_overview_block1.png"})}),"\n",(0,t.jsx)(e.p,{children:"\u56fe 6.9 GE \u539f\u7406\u6846\u56fe"}),"\n",(0,t.jsx)(e.h2,{id:"2-\u53c2\u6570\u914d\u7f6e",children:"2. \u53c2\u6570\u914d\u7f6e"}),"\n",(0,t.jsx)(e.h3,{id:"21-\u5185\u6838\u914d\u7f6e",children:"2.1. \u5185\u6838\u914d\u7f6e"}),"\n",(0,t.jsx)(e.p,{children:"GE\u9a71\u52a8\u4f9d\u8d56dma-buf\u3001CMA\uff0c\u9700\u8981\u63d0\u524d\u6253\u5f00\u3002"}),"\n",(0,t.jsx)(e.h4,{id:"211-\u6253\u5f00-cma",children:"2.1.1. \u6253\u5f00 CMA"}),"\n",(0,t.jsx)(e.p,{children:"\u5728luban\u6839\u76ee\u5f55\u4e0b\u6267\u884c make kernel-menuconfig\uff0c\u8fdb\u5165kernel\u7684\u529f\u80fd\u914d\u7f6e\uff0c\u6309\u5982\u4e0b\u9009\u62e9\uff1a"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"Linux\n    Memory Management options\n         [*] Contiguous Memory Allocator\n"})}),"\n",(0,t.jsx)(e.p,{children:"CMA\u533a\u57df\u7684\u5927\u5c0f\u914d\u7f6e\uff0c\u5982\u4e0b\u914d\u7f6e\u4e3a 16MB\uff0c\u53ef\u4ee5\u6839\u636e\u5177\u4f53\u9700\u6c42\u6765\u914d\u7f6esize\u5927\u5c0f"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"Linux\n    Library routines\n        [*] DMA Contiguous Memory Allocator\n        (16)  Size in Mega Bytes\n"})}),"\n",(0,t.jsx)(e.h4,{id:"212-\u6253\u5f00-dma-buf",children:"2.1.2. \u6253\u5f00 dma-buf"}),"\n",(0,t.jsx)(e.p,{children:"\u5728luban\u6839\u76ee\u5f55\u4e0b\u6267\u884c make kernel-menuconfig\uff0c\u8fdb\u5165kernel\u7684\u529f\u80fd\u914d\u7f6e\uff0c\u6309\u5982\u4e0b\u9009\u62e9\uff1a"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-c",children:"Linux\n    Device Drivers\n        DMABUF options\n            [*] Explicit Synchronization Framework\n            [*]   Sync File Validation Framework\n            [*] userspace dmabuf misc driver\n            [*] DMA-BUF Userland Memory Heaps\n                [*]   DMA-BUF CMA Heap\n"})}),"\n",(0,t.jsx)(e.h4,{id:"213-\u6253\u5f00-ge",children:"2.1.3. \u6253\u5f00 GE"}),"\n",(0,t.jsx)(e.p,{children:"\u5728luban\u6839\u76ee\u5f55\u4e0b\u6267\u884c make kernel-menuconfig\uff0c\u8fdb\u5165kernel\u7684\u529f\u80fd\u914d\u7f6e\uff0c\u6309\u5982\u4e0b\u9009\u62e9\uff1a"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"Linux\n    Device Drivers  ---\x3e\n        Graphics support  ---\x3e\n            Artinchip Graphics  ---\x3e\n                <*> Artinchip 2D Graphics Engine\n                    select 2D Graphics Engine Mode\n                        ( ) CMD queue mode\n                        (X) normal mode\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u53ef\u4ee5\u9009\u62e9CMD queue mode\u6216\u8005normal mode\uff0c\u53ea\u53ef\u4ee5\u4e8c\u9009\u4e00, \u5176\u4e2dCMD queue mode\u4e3a\u547d\u4ee4\u961f\u5217\u6a21\u5f0f\uff0cnormal mode\u4e3a\u975e\u547d\u4ee4\u961f\u5217\u6a21\u5f0f"}),"\n",(0,t.jsx)(e.h3,{id:"22-dts-\u53c2\u6570\u914d\u7f6e",children:"2.2. DTS \u53c2\u6570\u914d\u7f6e"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:'ge: ge@18b00000 {\n    #address-cells = <1>;\n    #size-cells = <0>;\n    compatible = "artinchip,aic-ge-v1.0";\n    reg = <0x0 0x18b00000 0x0 0x1000>;\n    interrupts-extended = <&plic0 60 IRQ_TYPE_LEVEL_HIGH>;\n    clocks = <&cmu CLK_GE>;\n    clock-names = "ge";\n    resets = <&rst RESET_GE>;\n    reset-names = "ge";\n};\n'})}),"\n",(0,t.jsx)(e.h2,{id:"3-\u8c03\u8bd5\u6307\u5357",children:"3. \u8c03\u8bd5\u6307\u5357"}),"\n",(0,t.jsx)(e.h3,{id:"31-\u8c03\u8bd5\u5f00\u5173",children:"3.1. \u8c03\u8bd5\u5f00\u5173"}),"\n",(0,t.jsx)(e.p,{children:"\u5728luban\u6839\u76ee\u5f55\u4e0b\u6267\u884c make kernel-menuconfig\uff0c\u8fdb\u5165kernel\u7684\u529f\u80fd\u914d\u7f6e\uff0c\u53ef\u4ee5\u6253\u5f00GE\u6a21\u5757\u7684DEBUG\u9009\u9879\uff1a"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-c",children:"Linux\n    Kernel hacking\n        Artinchip Debug\n            [*] GE driver debug\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u6b64DEBUG\u9009\u9879\u6253\u5f00\u7684\u5f71\u54cd\uff1a"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsxs)(e.li,{children:["GE\u9a71\u52a8\u4ee5",(0,t.jsx)(e.code,{children:"-O0"}),"\u7f16\u8bd1"]}),"\n",(0,t.jsxs)(e.li,{children:["GE\u7684",(0,t.jsx)(e.code,{children:"dev_dbg()"}),"\u8c03\u8bd5\u4fe1\u606f\u4f1a\u88ab\u7f16\u8bd1"]}),"\n"]}),"\n",(0,t.jsxs)(e.p,{children:["\u5728\u7cfb\u7edf\u8fd0\u884c\u65f6\uff0c\u5982\u679c\u8981\u6253\u5370",(0,t.jsx)(e.code,{children:"pr_dbg()"}),"\u548c",(0,t.jsx)(e.code,{children:"dev_dbg()"}),"\u4fe1\u606f\uff0c\u8fd8\u9700\u8981\u8c03\u6574loglevel\u4e3a8\uff0c\u4e24\u4e2a\u65b9\u6cd5\uff1a"]}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsx)(e.li,{children:"\u5728board.dts\u4e2d\u4fee\u6539bootargs\uff0c\u589e\u52a0\u201cloglevel=8\u201d"}),"\n",(0,t.jsx)(e.li,{children:"\u5728\u677f\u5b50\u542f\u52a8\u5230Linux shell\u540e\uff0c\u6267\u884c\u547d\u4ee4\uff1a"}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-c",children:"echo 8 > /proc/sys/kernel/printk\n"})}),"\n",(0,t.jsx)(e.h2,{id:"4-\u6d4b\u8bd5\u6307\u5357",children:"4. \u6d4b\u8bd5\u6307\u5357"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u4f4d\u5757\u642c\u79fb"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"    \u6d4b\u8bd5\u547d\u4ee4: ge_bitblt\u6e90\u7801\u76ee\u5f55: source/artinchip/aic-mpp/mpp_tes/ge_bitblt.c\n"})}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u8272\u5757\u586b\u5145"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"    \u6d4b\u8bd5\u547d\u4ee4: ge_fillrect\u6e90\u7801\u76ee\u5f55: source/artinchip/aic-mpp/mpp_tes/ge_fillrect.c\n"})}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u56fe\u5f62\u65cb\u8f6c"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"    \u6d4b\u8bd5\u547d\u4ee4: ge_rotate\u6e90\u7801\u76ee\u5f55: source/artinchip/aic-mpp/mpp_tes/ge_rotate.c\n"})}),"\n",(0,t.jsx)(e.h2,{id:"5-\u8bbe\u8ba1\u8bf4\u660e",children:"5. \u8bbe\u8ba1\u8bf4\u660e"}),"\n",(0,t.jsx)(e.h3,{id:"51-\u6e90\u7801\u8bf4\u660e",children:"5.1. \u6e90\u7801\u8bf4\u660e"}),"\n",(0,t.jsx)(e.p,{children:"\u672c\u6a21\u5757\u6e90\u4ee3\u7801\u5728\u5185\u6838\u76ee\u5f55linux-5.10/drivers/video/artinchip\u4e0b\uff0c\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-c",children:"drivers/video/artinchip/ge/\n\u251c\u2500\u2500 ge_normal.c  // normal\u6a21\u5f0f\u9a71\u52a8\n\u251c\u2500\u2500 ge_hw.c  // normal\u6a21\u5f0f\u5bf9\u786c\u4ef6\u64cd\u4f5c\u7684\u5c01\u88c5\n\u251c\u2500\u2500 ge_hw.h  // normal\u6a21\u5f0f\u5bf9\u786c\u4ef6\u64cd\u4f5c\u5c01\u88c5\u7684API\n\u251c\u2500\u2500 ge_cmdq.c  // CMD queue\u6a21\u5f0f\u9a71\u52a8\n\u251c\u2500\u2500 ge_reg.h    // GE\u5bc4\u5b58\u5668\u5b9a\u4e49\n\u251c\u2500\u2500 Kconfig\n\u2514\u2500\u2500 Makefile\n"})}),"\n",(0,t.jsx)(e.p,{children:"GE\u9a71\u52a8\u662f\u57fa\u4e8emisc\u8bbe\u5907\u9a71\u52a8\u5b9e\u73b0\u7684\uff0c\u5728\u7528\u6237\u6001\u901a\u8fc7open\u8bbe\u5907\u8282\u70b9/dev/ge\u548cGE\u9a71\u52a8\u8fdb\u884c\u4ea4\u4e92\uff0c GE\u9a71\u52a8\u53ef\u4ee5\u914d\u7f6e\u6210normal\uff08\u975e\u547d\u4ee4\u961f\u5217\uff09\u6a21\u5f0f\u6216\u547d\u4ee4\u961f\u5217\u6a21\u5f0f\uff0c\u914d\u7f6e\u65b9\u6cd5\u53ef\u53c2\u8003\u53c2\u6570\u914d\u7f6e\u7ae0\u8282\u3002"}),"\n",(0,t.jsx)(e.h3,{id:"52-\u975e\u547d\u4ee4\u961f\u5217\u6a21\u5f0f",children:"5.2. \u975e\u547d\u4ee4\u961f\u5217\u6a21\u5f0f"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{src:"https://photos.100ask.net/artinchip-docs/d213-devkit/ge_sw_normal_0-17066833217075-17066833244757.png",alt:"../../../_https://photos.100ask.net/artinchip-docs/d213-devkit/ge_sw_normal_0.png"})}),"\n",(0,t.jsxs)(e.p,{children:["\u56fe 60 ",(0,t.jsx)(e.em,{children:"normal\u6a21\u5f0f\u67b6\u6784\u56fe"})]}),"\n",(0,t.jsx)(e.p,{children:"\u975e\u547d\u4ee4\u961f\u5217\u6a21\u5f0f\uff0c\u5373normal\u6a21\u5f0f\u3002\u5728normal\u6a21\u5f0f\u4e0b\uff0c\u5f53\u7528\u6237\u6001\u901a\u8fc7open\u51fd\u6570\u6253\u5f00/dev/ge\u8bbe\u5907\u8282\u70b9\uff0c\u4f1a\u8c03\u7528\u5230\u9a71\u52a8\u4e2d\u7684ge_open\uff0c \u5f53\u7528\u6237\u901a\u8fc7close\u5173\u95ed\u9a71\u52a8\u7684\u65f6\u5019\uff0c\u4f1a\u8c03\u7528\u5230\u9a71\u52a8\u4e2d\u7684ge_release\u3002\u5728ge_open\u4e2d\u4e3b\u8981\u662f\u5b9e\u73b0\u4e86\u6a21\u5757clock\u7684\u6253\u5f00\u64cd\u4f5c\uff0c \u5728ge_release\u4e2d\u5b9e\u73b0\u4e86\u6a21\u5757clock\u7684\u5173\u95ed\u64cd\u4f5c\u3002\u5f53\u7528\u6237\u6001\u6709\u591a\u4e2a\u7528\u6237\u6253\u5f00GE\u9a71\u52a8\u7684\u65f6\u5019\uff0c\u5bf9\u9a71\u52a8\u6253\u5f00\u6b21\u6570\u8fdb\u884c\u5f15\u7528\u8ba1\u6570\uff0c \u81f3\u5c11\u6709\u4e00\u4e2a\u7528\u6237\u6253\u5f00GE\u9a71\u52a8\u65f6\u6253\u5f00GE\u7684clock, \u5f53\u6240\u6709\u7684\u7528\u6237\u90fd\u5173\u95edGE\u9a71\u52a8\u65f6\u5173\u95edGE\u7684clock\u3002"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-c",children:"static int ge_open(struct inode *inode, struct file *file)\n{\n    mutex_lock(&g_data->lock);\n    if (g_data->refs == 0) {\n        ge_clk_enable(g_data);\n    }\n    g_data->refs++;\n    mutex_unlock(&g_data->lock);\n\n    return nonseekable_open(inode, file);\n}\n\nstatic int ge_release(struct inode *inode, struct file *file)\n{\n    mutex_lock(&g_data->lock);\n    if (g_data->refs == 1) {\n        ge_clk_disable(g_data);\n    }\n    g_data->refs--;&_\n    mutex_unlock(&g_data->lock);\n    return 0;\n}\n"})}),"\n",(0,t.jsx)(e.p,{children:"normal\u6a21\u5f0f\u7528\u6237\u6001\u53ef\u7528ioctl\uff1a"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"IOC_GE_VERSION"}),"\n",(0,t.jsx)(e.li,{children:"IOC_GE_MODE"}),"\n",(0,t.jsx)(e.li,{children:"IOC_GE_FILLRECT"}),"\n",(0,t.jsx)(e.li,{children:"IOC_GE_BITBLT"}),"\n",(0,t.jsx)(e.li,{children:"IOC_GE_ROTATE"}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:"\u5bf9\u4e8e\u63a5\u53e3IOC_GE_FILLRECT\u3001IOC_GE_BITBLT\u3001IOC_GE_ROTATE\u5728normal\u6a21\u5f0f\u4e0b\u8c03\u7528\u662f\u540c\u6b65\u7684\uff0c \u786c\u4ef6\u6267\u884c\u4efb\u52a1\u5b8c\u6210\u540e\u63a5\u53e3\u8c03\u7528\u624d\u4f1a\u8fd4\u56de\uff0c\u5728normal\u6a21\u5f0f\u4e0b\uff0c\u65e0\u9700\u8c03\u7528IOC_GE_SYNC\u63a5\u53e3\u3002"}),"\n",(0,t.jsx)(e.h4,{id:"521-\u5173\u952e\u6d41\u7a0b\u8bbe\u8ba1",children:"5.2.1. \u5173\u952e\u6d41\u7a0b\u8bbe\u8ba1"}),"\n",(0,t.jsx)(e.p,{children:"\u5728normal\u6a21\u5f0f\u4e0b\uff0cGE\u9a71\u52a8\u5404\u79cd\u529f\u80fd\u90fd\u662f\u901a\u8fc7ioctrl\u8c03\u7528\u6765\u5b9e\u73b0\uff0c\u6bcf\u4e00\u6b21ioctl\u7684\u8c03\u7528\u90fd\u5305\u62ecGE\u53c2\u6570\u914d\u7f6e\u3001GE\u6a21\u5757\u4e2d\u65ad\u5f00\u542f\uff0c GE\u542f\u52a8\uff0cGE\u7b49\u4e2d\u65ad\uff08\u963b\u585e\u7b49\u5f85\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u901a\u77e5\u4e2d\u65ad\u5230\u6765\uff09\uff0c\u786c\u4ef6\u5b8c\u6210\u4efb\u52a1\u540e\uff0c\u5173\u95ed\u4e2d\u65ad\u3002Ioctl\u901a\u8fc7mutex\u4fdd\u62a4\uff0c \u652f\u6301\u591a\u7528\u6237\u540c\u65f6\u6253\u5f00\u9a71\u52a8\u8bbe\u5907\u8282\u70b9\uff0c\u5e76\u8c03\u7528ioctl\u3002"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{src:"https://photos.100ask.net/artinchip-docs/d213-devkit/ge_sw_normal_11-170668350283914.png",alt:"../../../_https://photos.100ask.net/artinchip-docs/d213-devkit/ge_sw_normal_11.png"})}),"\n",(0,t.jsx)(e.p,{children:"\u56fe 61 normal\u6a21\u5f0f\u4e2d\u65ad\u6d41\u7a0b"}),"\n",(0,t.jsx)(e.p,{children:"\u7b49\u5f85\u4e2d\u65ad\u6d41\u7a0b\uff1a"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:["\u5728probe\u65f6\u5019\u521d\u59cb\u5316\u7b49\u5f85\u961f\u5217\uff1a ",(0,t.jsx)(e.code,{children:"init_waitqueue_head(&data->wait);"})]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:"\u5728ioctl\u4e2d\u8c03\u7528\u5982\u4e0b\u51fd\u6570\uff0c\u4f7f\u5f53\u524d\u8fdb\u7a0b\u5728\u7b49\u5f85\u961f\u5217\u4e2d\u7761\u7720\uff1a"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.code,{children:"wait_event_timeout(data->wait, data->status, msecs_to_jiffies(GE_TIMEOUT_MS));"})}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:["\u5728\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u4e2d\u8c03\u7528",(0,t.jsx)(e.code,{children:"wake_up(&data->wait)"}),"\uff0c\u5524\u9192\u7b49\u5f85\u961f\u5217\u4e2d\u7684\u7761\u7720\u8fdb\u7a0b"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"53-\u547d\u4ee4\u961f\u5217\u6a21\u5f0f",children:"5.3. \u547d\u4ee4\u961f\u5217\u6a21\u5f0f"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{src:"https://photos.100ask.net/artinchip-docs/d213-devkit/ge_sw_cmdq.png",alt:"../../../_https://photos.100ask.net/artinchip-docs/d213-devkit/ge_sw_cmdq.png"})}),"\n",(0,t.jsxs)(e.p,{children:["\u56fe 62 ",(0,t.jsx)(e.em,{children:"CMD queue\u6a21\u5f0f\u67b6\u6784\u56fe"})]}),"\n",(0,t.jsx)(e.p,{children:"\u547d\u4ee4\u961f\u5217\u6a21\u5f0f\uff0c\u5373CMD queue\u6a21\u5f0f\u3002\u5728CMD queue\u6a21\u5f0f\u4e0b\uff0cGE\u9a71\u52a8\u5185\u90e8\u662f\u4ee5Command queue\u7684\u65b9\u5f0f\u6267\u884c\u7684\uff0c GE\u9a71\u52a8\u53ea\u8d1f\u8d23\u4ece\u7528\u6237\u6001\u63a5\u6536\u547d\u4ee4\u961f\u5217\uff0c\u7136\u540e\u6267\u884c\u547d\u4ee4\u961f\u5217\u3002GE\u7684\u5b8c\u6574\u529f\u80fd\u9700\u8981\u4f9d\u8d56MPP\u4e2d\u95f4\u4ef6\uff0c \u5728MPP\u4e2d\u95f4\u4ef6\u4e2d\u4f1a\u628a\u7528\u6237\u8bbe\u7f6e\u7684\u53c2\u6570\u4fe1\u606f\u8f6c\u6362\u6210\u786c\u4ef6\u53ef\u4ee5\u8bc6\u522b\u7684\u547d\u4ee4\u961f\u5217\u4fe1\u606f\u3002"}),"\n",(0,t.jsx)(e.p,{children:"Command Queue\u76f8\u5173\u7684\u51e0\u4e2a\u6982\u5ff5\uff1a"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Task\uff1a GE\uff08Graphics Engine\uff09 \u53ef\u4ee5\u6267\u884c\u7684\u6700\u5c0f\u4efb\u52a1\u5355\u5143\uff0c\u6bd4\u5982\u8bf4\u4e00\u6b21blit\u64cd\u4f5c\u3001\u4e00\u6b21\u77e9\u5f62\u586b\u5145"}),"\n",(0,t.jsx)(e.li,{children:"Batch\uff1a\u786c\u4ef6\u4ee5batch\u4e3a\u5355\u4f4d\u6267\u884c\uff0c\u662f\u4e00\u7cfb\u5217\u547d\u4ee4\u7684\u96c6\u5408\uff0c\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u6216\u8005\u591a\u4e2atask\uff0c\u8f6f\u4ef6\u4e5f\u5fc5\u987b\u4ee5batch\u4e3a\u5355\u4f4d\u5411\u9a71\u52a8\u5199\u5165\u547d\u4ee4"}),"\n",(0,t.jsx)(e.li,{children:"Command Queue\uff1a\u8f6f\u4ef6\u53ef\u4ee5\u5411Command Queue\u5199\u5165\u591a\u4e2abatch\uff0c\u786c\u4ef6\u4ee5batch\u4e3a\u5355\u4f4d\uff0c\u6309\u987a\u5e8f\u6267\u884c"}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:"GE Command Queue\u662f\u4ee5ring buffer\u7684\u65b9\u5f0f\u5b9e\u73b0\u7684, \u5173\u4e8ering buffer\u7684\u8bf4\u660e\uff0c\u8bf7\u53c2\u8003GE\u89c4\u683c\u4e66"}),"\n",(0,t.jsx)(e.p,{children:"CMD queue\u548cnormal\u6a21\u5f0f\u9a71\u52a8\u76f8\u6bd4\u589e\u52a0\u4e86write\u63a5\u53e3\uff0c\u547d\u4ee4\u961f\u5217\u901a\u8fc7write\u63a5\u53e3\uff0c\u4ee5batch\u4e3a\u5355\u4f4d\u53d1\u9001\u7ed9\u9a71\u52a8\uff0cbatch\u4e2d\u53ef\u4ee5\u5305\u542b\u591a\u4e2atask\u7684\u547d\u4ee4\u3002 write\u64cd\u4f5c\u662f\u5f02\u6b65\u7684\uff0c\u76f8\u5e94\u7684\u547d\u4ee4\u53ea\u8981\u5199\u5165\u9a71\u52a8\u4e2d\u7684cmd queue buffer\u5373\u8fd4\u56de\uff0c\u4e0d\u7528\u7b49\u5f85\u786c\u4ef6\u6267\u884c\u5b8c\u5f53\u524dbatch\u4e2d\u7684\u6240\u6709\u547d\u4ee4\uff0c \u5f53\u7528\u6237\u9700\u8981\u7b49\u5f85\u53d1\u9001\u7684\u547d\u4ee4\u6267\u884c\u5b8c\u6210\u65f6\u53ef\u4ee5\u8c03\u7528IOC_GE_SYNC\u63a5\u53e3\u3002\u5728CMD queue\u6a21\u5f0f\u4e0b\uff0c\u901a\u8fc7write\u63a5\u53e3\u5199\u5165\u4ee5batch\u4e3a\u5355\u4f4d\u7684\u547d\u4ee4\uff0c \u786c\u4ef6\u53ef\u4ee5\u8fde\u7eed\u6267\u884c\u591a\u4e2atask\u3002\u800c\u5728normal\u6a21\u5f0f\u4e0b\uff0c\u901a\u8fc7IOC_GE_BITBLT\u7b49\u63a5\u53e3\uff0c\u786c\u4ef6\u4e00\u6b21\u53ea\u80fd\u6267\u884c\u4e00\u4e2a\u4efb\u52a1\u3002"}),"\n",(0,t.jsx)(e.p,{children:"CMD Queue\u6a21\u5f0f\u7528\u6237\u6001\u53ef\u7528ioctl\uff1a"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"IOC_GE_VERSION"}),"\n",(0,t.jsx)(e.li,{children:"IOC_GE_MODE"}),"\n",(0,t.jsx)(e.li,{children:"IOC_GE_CMD_BUF_SIZE"}),"\n",(0,t.jsx)(e.li,{children:"IOC_GE_SYNC"}),"\n",(0,t.jsx)(e.li,{children:"IOC_GE_ADD_DMA_BUF"}),"\n",(0,t.jsx)(e.li,{children:"IOC_GE_RM_DMA_BUF"}),"\n"]}),"\n",(0,t.jsx)(e.h4,{id:"531-\u521d\u59cb\u5316\u6d41\u7a0b",children:"5.3.1. \u521d\u59cb\u5316\u6d41\u7a0b"}),"\n",(0,t.jsx)(e.p,{children:"GE\u9a71\u52a8\u7684\u521d\u59cb\u5316\u8fc7\u7a0b\u89c1aic_ge_probe()\u51fd\u6570\uff0c\u9664\u4e86\u7533\u8bf7regs\u3001clk\u3001reset\u7b49\u8d44\u6e90\u5916\uff0c \u8fd8\u7533\u8bf7\u4e86\u5b58\u50a8Command Queue\u9700\u8981\u7684ring buffer\uff0c\u4ee5\u53ca\u5b58\u50a8batch\u4fe1\u606f\u7684\u7ed3\u6784\u4f53\u3002 batch\u7ed3\u6784\u4f53\u4e0d\u5b58\u50a8\u5b9e\u9645\u7684\u547d\u4ee4\uff0cbatch\u7ed3\u6784\u4f53\u4e2d\u4fdd\u5b58\u6307\u5411ring buffer\u7684\u4e00\u6bb5\u7a7a\u95f4\uff0c \u5305\u62ec\u76f8\u5bf9\u4e8ering buffer\u8d77\u59cb\u5730\u5740\u7684offset\uff0c\u4ee5\u53ca\u5f53\u524dbatch\u4e2d\u7684\u547d\u4ee4length\u3002batch\u7ed3\u6784\u4f53\u5b9a\u4e49\u5982\u4e0b:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-c",children:"struct aic_ge_batch {\n    struct list_head list;\n    int offset;\n    int length;\n    int client_id;\n};\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u4e0b\u56fering buffer\u4e2d\u4e0d\u540c\u7684\u989c\u8272\u4ee3\u8868\u4e0d\u540c\u7684batch\u5bf9\u5e94\u7684\u547d\u4ee4\uff1a"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{src:"https://photos.100ask.net/artinchip-docs/d213-devkit/ge_function_cmdq_02.png",alt:"../../../_https://photos.100ask.net/artinchip-docs/d213-devkit/ge_function_cmdq_02.png"})}),"\n",(0,t.jsxs)(e.p,{children:["\u56fe 63 ",(0,t.jsx)(e.em,{children:"ring buffer\u4e0ebatch\u5173\u7cfb\u56fe"})]}),"\n",(0,t.jsx)(e.p,{children:"\u76ee\u524d\u9a71\u52a8\u4e2d\u5b9a\u4e49\u4e868\u4e2a\u5b58\u50a8batch\u4fe1\u606f\u7684\u7ed3\u6784\u4f53\uff0cring buffer\u7684size\u5b9a\u4e49\u4e3a32K, 32K\u7684\u7a7a\u95f4\u53ef\u4ee5\u7f13\u5b58\u8d85\u8fc7256\u4e2atask\uff08\u5047\u5982\u90fd\u662fRGB\u683c\u5f0f\u7684task\uff09\u3002"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"#define MAX_BATCH_NUM 8\n#define CMD_BUF_SIZE  (32 * 1024)\n"})}),"\n",(0,t.jsx)(e.h4,{id:"532-batch\u7ba1\u7406",children:"5.3.2. batch\u7ba1\u7406"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsx)(e.li,{children:"\u6bcf\u4e00\u4e2abatch\u603b\u5171\u53ef\u80fd\u5b58\u57283\u4e2d\u72b6\u6001\uff1a"}),"\n"]}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"free\u72b6\u6001\uff0cbatch\u4e2d\u6ca1\u6709\u53ef\u7528\u4fe1\u606f\uff0c\u5728free batch list\u4e2d"}),"\n",(0,t.jsx)(e.li,{children:"ready\u72b6\u6001\uff0cbatch\u4e2d\u6709\u7b49\u5f85\u6267\u884c\u7684cmd\u4fe1\u606f\uff0c\u5728ready list batch\u4e2d"}),"\n",(0,t.jsx)(e.li,{children:"\u8fd0\u884c\u72b6\u6001\uff0c\u5f53\u524d\u786c\u4ef6\u6b63\u5728\u8fd0\u884c\u7684batch\uff0c\u5373\u4e0d\u5728free list\u4e2d\u4e5f\u4e0d\u5728ready list\u4e2d"}),"\n"]}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsx)(e.li,{children:"\u5728\u7528\u6237\u6001\u7684\u7f13\u51b2buffer\u4e2d\uff0c\u7528\u6237\u7ec4\u7ec7\u597d\u547d\u4ee4\u961f\u5217\uff0c\u4ee5batch\u4e3a\u5355\u4f4d\uff0c\u901a\u8fc7\u6807\u51c6\u7684write\u63a5\u53e3\u628a\u547d\u4ee4copy\u5230\u5185\u6838\u4e2d\u7684ring buffer\u3002"}),"\n",(0,t.jsx)(e.li,{children:"\u5728\u5185\u6838\u4e2d\u7ef4\u62a4\u4e00\u4e2a\u5305\u542b\u6bcf\u4e2abatch\u8d77\u59cboffset\u548clength\u4fe1\u606f\u7684\u94fe\u8868\uff0c\u786c\u4ef6\u4ee5batch\u4e3a\u5355\u4f4d\u6267\u884c\u547d\u4ee4\u961f\u5217\u3002"}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{src:"https://photos.100ask.net/artinchip-docs/d213-devkit/ge_function_cmdq_41.png",alt:"../../../_https://photos.100ask.net/artinchip-docs/d213-devkit/ge_function_cmdq_41.png"})}),"\n",(0,t.jsx)(e.p,{children:"\u56fe 64 batch\u72b6\u6001\u53d8\u5316\u6d41\u7a0b\u56fe"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsx)(e.li,{children:"\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u4f1a\u6709\u4e24\u4e2a\u5730\u65b9\u542f\u52a8\u786c\u4ef6\u6267\u884cbatch\u547d\u4ee4"}),"\n"]}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u5f53\u7528\u6237\u8c03\u7528\u4e86write\u547d\u4ee4\u5199\u5165\u5f53\u524dbatch\u4fe1\u606f\uff0c\u5e76\u4e14\u786c\u4ef6\u5904\u4e8e\u7a7a\u95f2\u72b6\u6001"}),"\n",(0,t.jsx)(e.li,{children:"\u5728\u4e2d\u65ad\u670d\u52a1\u5224\u65ad\u5f53\u524d\u7684ready list batch\u4e0d\u4e3a\u7a7a\uff0c\u5219\u4ece\u5217\u8868\u4e2ddequeue\u4e00\u4e2abatch\uff0c\u9001\u7ed9\u786c\u4ef6\u6267\u884c"}),"\n"]}),"\n",(0,t.jsx)(e.h4,{id:"533-\u591a\u8fdb\u7a0b\u652f\u6301",children:"5.3.3. \u591a\u8fdb\u7a0b\u652f\u6301"}),"\n",(0,t.jsx)(e.p,{children:"\u652f\u6301\u591a\u8fdb\u7a0b\u8c03\u7528\uff0c\u4e0d\u540c\u8fdb\u7a0b\u6dfb\u52a0\u7684batch\uff0c\u6309\u7167\u5148\u8fdb\u5148\u51fa\u539f\u5219\u8fd0\u884c\u3002"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{src:"https://photos.100ask.net/artinchip-docs/d213-devkit/ge_function_cmdq_31.png",alt:"../../../_https://photos.100ask.net/artinchip-docs/d213-devkit/ge_function_cmdq_31.png"})}),"\n",(0,t.jsx)(e.p,{children:"\u56fe 65 \u591a\u8fdb\u7a0b\u652f\u6301"}),"\n",(0,t.jsx)(e.p,{children:"\u5f53\u67d0\u4e2a\u8fdb\u7a0b\u9700\u8981\u7b49\u5f85\u5f53\u524d\u8fdb\u7a0b\u4efb\u52a1\u662f\u5426\u5b8c\u6210\u7684\u65f6\u5019\uff0c\u9700\u8981\u8c03\u7528IOC_GE_SYNC\u547d\u4ee4\uff0c\u7b49\u5f85\u5f53\u524d\u8fdb\u7a0b\u6240\u6709\u7684\u4efb\u52a1\u5b8c\u6210\u5373\u53ef\uff0c\u5982\u4e0a\u56fe\u6240\u793a\u3002 \u5f53\u8fdb\u7a0b2\u8c03\u7528IOC_GE_SYNC\u547d\u4ee4\u65f6\uff0c\u53ea\u9700\u8981\u7b49\u5f85Batch5\u5b8c\u6210\u5373\u53ef\uff0c\u4e0d\u7528\u7ba1\u540e\u8fb9\u52a0\u5165\u7684\u5176\u4ed6\u8fdb\u7a0b\u7684Batch6\u3001Batch7"}),"\n",(0,t.jsx)(e.p,{children:"IOC_GE_SYNC\u7684\u5b9e\u73b0\uff1a"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsx)(e.li,{children:"\u5728open\u4e2d\u7684file\u4e0a\u4e0b\u6587\u4e2d\u521b\u5efa\u5f53\u524dclient\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\uff0c\u5e76\u6dfb\u52a0\u5230client\u94fe\u8868\u4e2d\uff0c\u5728client\u4e2d\u6709\u552f\u4e00\u8bc6\u522bid"}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-c",children:"struct aic_ge_client {\n    struct list_head list;\n    struct list_head buf_list;\n    struct mutex buf_lock; /* dma buf list lock */\n    int id;\n    int batch_num;\n};\n"})}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsx)(e.li,{children:"\u5f53\u524d\u7528\u6237\u8c03\u7528write\u63a5\u53e3\uff0c\u5199\u5165\u4e00\u4e2abatch\u547d\u4ee4\u7684\u65f6\u5019\uff0c \u5f53\u524dbatch\u4e2d\u7684client_id\u4f1a\u5199\u5165\u5bf9\u5e94\u7684client\u8bc6\u522bid\uff0c \u5e76\u4e14\u5bf9\u5e94\u7684client\u4e0a\u4e0b\u6587\u4e2d\u7684batch_num\u5f15\u7528\u8ba1\u6570\u4f1a\u52a01\u3002"}),"\n",(0,t.jsx)(e.li,{children:"\u786c\u4ef6\u6bcf\u6267\u884c\u5b8c\u6210\u4e00\u4e2abatch\u4ea7\u751f\u4e00\u6b21\u4e2d\u65ad\uff0c\u5728\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u4e2d\u67e5\u8be2\u5f53\u524dbatch\u4e2d\u7684client_id\uff0c\u5e76\u901a\u8fc7client_id\u4ececlient\u94fe\u8868\u4e2d\u627e\u5230\u5f53\u524dclient\uff0c \u5bf9\u5e94\u7684client\u4e0a\u4e0b\u6587\u4e2d\u7684batch_num\u5f15\u7528\u8ba1\u6570\u51cf1\u3002\u5728\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u4e2d\u6bcf\u6765\u4e00\u6b21\u4e2d\u65ad\u4f1a\u901a\u77e5\u6240\u6709\u8fdb\u7a0b"}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"wake_up_all(&data->wait);\n"})}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsx)(e.li,{children:"\u7528\u6237\u901a\u8fc7\u63a5\u53e3IOC_GE_SYNC\u7b49\u5f85\u4efb\u52a1\u5b8c\u6210\uff0c\u53ea\u9700\u8981\u7b49\u5f85\u5f53\u524dclient\u4e2d\u7684batch_num\u4e3a0\u5373\u53ef\u3002"}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-c",children:"static int ge_client_sync(struct aic_ge_data *data,\n            struct aic_ge_client *client)\n    while (client->batch_num) {\n        ret = wait_event_interruptible_timeout(data->wait,\n                            !client->batch_num,\n                            GE_TIMEOUT(4));\n        if (ret < 0)\n            break;\n    }\n    return ret;\n}\n"})}),"\n",(0,t.jsx)(e.h3,{id:"54-\u6570\u636e\u7ed3\u6784\u8bbe\u8ba1",children:"5.4. \u6570\u636e\u7ed3\u6784\u8bbe\u8ba1"}),"\n",(0,t.jsx)(e.h4,{id:"541-enum-ge_pd_rules",children:"5.4.1. enum ge_pd_rules"}),"\n",(0,t.jsx)(e.p,{children:"Porter/Duff alpha\u6df7\u5408\u89c4\u5219\u679a\u4e3e"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-c",children:"/*\n * enum ge_pd_mode - graphics engine Porter/Duff alpha blending rules\n *\n * pixel = (source * fs + destination * fd)\n * sa = source alpha\n * da = destination alpha\n *\n * @GE_PD_NONE:           fs: sa      fd: 1.0-sa (defaults)\n * @GE_PD_CLEAR:          fs: 0.0     fd: 0.0\n * @GE_PD_SRC:            fs: 1.0     fd: 0.0\n * @GE_PD_SRC_OVER:       fs: 1.0     fd: 1.0-sa\n * @GE_PD_DST_OVER:       fs: 1.0-da  fd: 1.0\n * @GE_PD_SRC_IN:         fs: da      fd: 0.0\n * @GE_PD_DST_IN:         fs: 0.0     fd: sa\n * @GE_PD_SRC_OUT:        fs: 1.0-da  fd: 0.0\n * @GE_PD_DST_OUT:        fs: 0.0     fd: 1.0-sa\n * @GE_PD_SRC_ATOP:       fs: da      fd: 1.0-sa\n * @GE_PD_DST_ATOP:       fs: 1.0-da  fd: sa\n * @GE_PD_ADD:            fs: 1.0     fd: 1.0\n * @GE_PD_XOR:            fs: 1.0-da  fd: 1.0-sa\n * @GE_PD_DST:            fs: 0.0     fd: 1.0\n */\nenum ge_pd_rules {\n        GE_PD_NONE           =  0,\n        GE_PD_CLEAR          =  1,\n        GE_PD_SRC            =  2,\n        GE_PD_SRC_OVER       =  3,\n        GE_PD_DST_OVER       =  4,\n        GE_PD_SRC_IN         =  5,\n        GE_PD_DST_IN         =  6,\n        GE_PD_SRC_OUT        =  7,\n        GE_PD_DST_OUT        =  8,\n        GE_PD_SRC_ATOP       =  9,\n        GE_PD_DST_ATOP       = 10,\n        GE_PD_ADD            = 11,\n        GE_PD_XOR            = 12,\n        GE_PD_DST            = 13,\n};\n"})}),"\n",(0,t.jsx)(e.h4,{id:"542-struct-ge_ctrl",children:"5.4.2. struct ge_ctrl"}),"\n",(0,t.jsx)(e.p,{children:"GE\u63a7\u5236\u7ed3\u6784\u4f53"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-c",children:"/**\n * struct ge_ctrl - ge ctrl functions\n * @alpha_en\n *  0: enable Porter/Duff alpha blending\n *  1: disable Porter/Duff alpha blending\n * @alpha_rules: Porter/Duff alpha blending rules\n * @src_alpha_mode: source alpha mode\n *  0: pixel alpha mode(src_alpha = src_pixel_alpha)\n *  1: global alpha mode(src_alpha = src_global_alpha)\n *  2: mixded alpha mode(src_alpha = src_pixel_alpha * src_global_alpha / 255)\n * @src_global_alpha: source global alpha value (0~255)\n *  used by global alpha mode and mixded alpha mode\n * @dst_alpha_mode: destination alpha mode\n *  0: pixel alpha mode(dst_alpha = dst_pixel_alpha)\n *  1: global alpha mode(dst_alpha = dst_global_alpha)\n *  2: mixded alpha mode(dst_alpha = dst_pixel_alpha * dst_global_alpha / 255)\n * @dst_global_alpha: destination global alpha value (0~255)\n *  used by global alpha mode and mixed alpha mode\n * @ck_en\n *  0: disable color key\n *  1: enable color key\n * @ck_value: rgb value of color key to match the source pixels\n *  bit[31:24]: reserved\n *  bit[23:16]: R value\n *  bit[15:8]: G value\n *  bit[7:0]: B value\n * @dither_en(Not supported by IOC_GE_ROTATE)\n *  0: disable dither\n *  1: enable dither\n * @flags: the flags of some functions, such as scan order, src H/V flip\n *         and src 90/180/270 degree rotation, the H flip, V flip\n *         and rotation can be enabled at the same time, the effect\n *         of flip is in front of rotation, only supported by IOC_GE_BITBLT\n *         the flags was defined in mpp_types.h\n */\nstruct ge_ctrl {\n        unsigned int       alpha_en;\n        enum ge_pd_rules   alpha_rules;\n        unsigned int       src_alpha_mode;\n        unsigned int       src_global_alpha;\n        unsigned int       dst_alpha_mode;\n        unsigned int       dst_global_alpha;\n        unsigned int       ck_en;\n        unsigned int       ck_value;\n        unsigned int       dither_en;\n        unsigned int       flags;\n};\n"})}),"\n",(0,t.jsx)(e.h4,{id:"543-enum-ge_fillrect_type",children:"5.4.3. enum ge_fillrect_type"}),"\n",(0,t.jsx)(e.p,{children:"\u989c\u8272\u586b\u5145\u7c7b\u578b\u679a\u4e3e"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-c",children:"/*\n * enum ge_fillrect_type - the ge fill rectangle types:\n *\n * GE_NO_GRADIENT: No gradient is used, only use start_color to\n *                  fill rectangle, ignore end_color\n * GE_H_LINEAR_GRADIENT: Interpolates colors between start_color\n *                  and end_color in the horizontal direction\n *                  form left to right\n * GE_V_LINEAR_GRADIENT: Interpolates colors between start_color and\n *                  end_color in the vertical direction from top to\n *                  buttom\n */\nenum ge_fillrect_type {\n        GE_NO_GRADIENT         = 0,\n        GE_H_LINEAR_GRADIENT   = 1,\n        GE_V_LINEAR_GRADIENT   = 2,\n};\n"})}),"\n",(0,t.jsx)(e.h4,{id:"544-struct-ge_fillrect",children:"5.4.4. struct ge_fillrect"}),"\n",(0,t.jsx)(e.p,{children:"\u77e9\u5f62\u586b\u5145\u7ed3\u6784\u4f53"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-c",children:"/**\n * struct ge_fillrect - ge fill rectangle\n * @type: fill rect type\n * @start_color: start color(32 bits)\n * bit[31:24] alpha value\n * bit[23:16] r value\n * bit[15:8]  g value\n * bit[7:0]   b value\n * @end_color: end color(32 bits)\n * bit[31:24] alpha value\n * bit[23:16] r value\n * bit[15:8]  g value\n * bit[7:0]   b value\n * @dst_buf: the destination buffer\n * @ctrl: ge ctrl functions\n */\nstruct ge_fillrect {\n        enum ge_fillrect_type  type;\n        unsigned int           start_color;\n        unsigned int           end_color;\n        struct mpp_buf         dst_buf;\n        struct ge_ctrl         ctrl;\n};\n"})}),"\n",(0,t.jsxs)(e.h4,{id:"545-struct-ge_bitblt",children:["5.4.5. struct ge_bitblt",(0,t.jsx)(e.a,{href:"#struct-ge-bitblt",children:"\xb6"})]}),"\n",(0,t.jsx)(e.p,{children:"\u4f4d\u5757\u642c\u79fb\u7ed3\u6784\u4f53"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-c",children:"/**\n * struct ge_bitblt - ge bitblt\n * @src_buf: the source buffer\n * @dst_buf: the destination buffer\n * @ctrl: ge ctrl functions\n */\nstruct ge_bitblt {\n        struct mpp_buf   src_buf;\n        struct mpp_buf   dst_buf;\n        struct ge_ctrl   ctrl;\n};\n"})}),"\n",(0,t.jsxs)(e.h4,{id:"546-struct-ge_bitblt",children:["5.4.6. struct ge_bitblt",(0,t.jsx)(e.a,{href:"#id9",children:"\xb6"})]}),"\n",(0,t.jsx)(e.p,{children:"\u4f4d\u5757\u642c\u79fb\u7ed3\u6784\u4f53"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-c",children:"/**\n * struct ge_rotation - ge rotation\n * @src_buf: the source buffer\n * @dst_buf: the destination buffer\n * @src_rot_center: left-top x/y coordinate of src center\n * @dst_rot_center: left-top x/y coordinate of dst center\n * @angle_sin: 2.12 fixed point, the sin value of rotation angle\n * @angle_cos: 2.12 fixed point, the cos value of rotation angle\n * @ctrl: ge ctrl functions\n */\nstruct ge_rotation {\n        struct mpp_buf        src_buf;\n        struct mpp_buf        dst_buf;\n        struct mpp_point      src_rot_center;\n        struct mpp_point      dst_rot_center;\n        int                   angle_sin;\n        int                   angle_cos;\n        struct ge_ctrl        ctrl;\n};\n"})}),"\n",(0,t.jsxs)(e.h4,{id:"547-enum-ge_mode",children:["5.4.7. enum ge_mode",(0,t.jsx)(e.a,{href:"#enum-ge-mode",children:"\xb6"})]}),"\n",(0,t.jsx)(e.p,{children:"GE\u6a21\u5f0f\u679a\u4e3e"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-c",children:"enum ge_mode {\n        GE_MODE_NORMAL,\n        GE_MODE_CMDQ,\n};\n"})}),"\n",(0,t.jsx)(e.h3,{id:"55-\u63a5\u53e3\u8bbe\u8ba1",children:"5.5. \u63a5\u53e3\u8bbe\u8ba1"}),"\n",(0,t.jsx)(e.p,{children:"\u7528\u6237\u6001\u901a\u8fc7/dev/ge\u8282\u70b9\u6253\u5f00GE\u9a71\u52a8\u3002"}),"\n",(0,t.jsx)(e.h4,{id:"551-ioc_ge_version",children:"5.5.1. IOC_GE_VERSION"}),"\n",(0,t.jsx)(e.p,{children:"\u63a5\u53e3\u8bed\u6cd5\uff1a"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-c",children:"int ioctl(int fd, unsigned long cmd, unsinged int *pversion);\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"| \u529f\u80fd\u8bf4\u660e | \u83b7\u53d6GE\u7248\u672c                                              |\n| -------- | ------------------------------------------------------- |\n| \u53c2\u6570     | cmd\uff1aIOC_GE_VERSIONpversion: \u6307\u541132bits\u65e0\u7b26\u53f7\u7248\u672c\u53f7\u6307\u9488 |\n| \u8fd4\u56de\u503c   | 0\uff1a\u6210\u529f<0\uff1a\u5931\u8d25                                         |\n| \u6ce8\u610f\u4e8b\u9879 | \u65e0                                                      |\n"})}),"\n",(0,t.jsx)(e.h4,{id:"552-ioc_ge_mode",children:"5.5.2. IOC_GE_MODE"}),"\n",(0,t.jsx)(e.p,{children:"\u63a5\u53e3\u8bed\u6cd5\uff1a"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"int ioctl(int fd, unsigned long cmd, enum ge_mode *mode);\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"| \u529f\u80fd\u8bf4\u660e | \u83b7\u53d6\u5de5\u4f5c\u6a21\u5f0f                           |\n| -------- | -------------------------------------- |\n| \u53c2\u6570     | cmd\uff1aIOC_GE_MODEmode: enum ge_mode\u6307\u9488 |\n| \u8fd4\u56de\u503c   | 0\uff1a\u6210\u529f<0\uff1a\u5931\u8d25                        |\n| \u6ce8\u610f\u4e8b\u9879 | \u65e0                                     |\n"})}),"\n",(0,t.jsx)(e.h3,{id:"6553-ioc_ge_fillrect",children:"6.5.5.3. IOC_GE_FILLRECT"}),"\n",(0,t.jsx)(e.p,{children:"\u63a5\u53e3\u8bed\u6cd5\uff1a"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"int ioctl(int fd, unsigned long cmd, struct ge_fillrect *fill);\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"| \u529f\u80fd\u8bf4\u660e | \u77e9\u5f62\u586b\u5145                                             |\n| -------- | ---------------------------------------------------- |\n| \u53c2\u6570     | cmd\uff1aIOC_GE_FILLRECTfill: \u6307\u5411struct ge_fillrect\u6307\u9488 |\n| \u8fd4\u56de\u503c   | 0\uff1a\u6210\u529f<0\uff1a\u5931\u8d25                                      |\n| \u6ce8\u610f\u4e8b\u9879 | \u4ec5\u4f9bnormal\u6a21\u5f0f\u4f7f\u7528, cmd queue\u6a21\u5f0f\u4e0d\u53ef\u7528              |\n"})}),"\n",(0,t.jsx)(e.h4,{id:"554-ioc_ge_bitblt",children:"5.5.4. IOC_GE_BITBLT"}),"\n",(0,t.jsx)(e.p,{children:"\u63a5\u53e3\u8bed\u6cd5\uff1a"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-c",children:"int ioctl(int fd, unsigned long cmd, struct ge_bitblt *bitblt);\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"| \u529f\u80fd\u8bf4\u660e | \u4f4d\u5757\u642c\u79fb                                           |\n| -------- | -------------------------------------------------- |\n| \u53c2\u6570     | cmd\uff1aIOC_GE_BITBLTbitblt: \u6307\u5411struct ge_bitblt\u6307\u9488 |\n| \u8fd4\u56de\u503c   | 0\uff1a\u6210\u529f<0\uff1a\u5931\u8d25                                    |\n| \u6ce8\u610f\u4e8b\u9879 | \u4ec5\u4f9bnormal\u6a21\u5f0f\u4f7f\u7528, cmd queue\u6a21\u5f0f\u4e0d\u53ef\u7528            |\n"})}),"\n",(0,t.jsx)(e.h4,{id:"555-ioc_ge_rotate",children:"5.5.5. IOC_GE_ROTATE"}),"\n",(0,t.jsx)(e.p,{children:"\u63a5\u53e3\u8bed\u6cd5\uff1a"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-c",children:"int ioctl(int fd, unsigned long cmd, struct ge_rotation *rot);\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"| \u529f\u80fd\u8bf4\u660e | \u4efb\u610f\u89d2\u5ea6\u65cb\u8f6c                                      |\n| -------- | ------------------------------------------------- |\n| \u53c2\u6570     | cmd\uff1aIOC_GE_ROTATErot: \u6307\u5411struct ge_rotation\u6307\u9488 |\n| \u8fd4\u56de\u503c   | 0\uff1a\u6210\u529f<0\uff1a\u5931\u8d25                                   |\n| \u6ce8\u610f\u4e8b\u9879 | \u4ec5\u4f9bnormal\u6a21\u5f0f\u4f7f\u7528, cmd queue\u6a21\u5f0f\u4e0d\u53ef\u7528           |\n"})}),"\n",(0,t.jsx)(e.h4,{id:"556-ioc_ge_sync",children:"5.5.6. IOC_GE_SYNC"}),"\n",(0,t.jsx)(e.p,{children:"\u63a5\u53e3\u8bed\u6cd5\uff1a"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-c",children:"int ioctl(int fd, unsigned long cmd);\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"| \u529f\u80fd\u8bf4\u660e | \u7b49\u5f85\u4efb\u52a1\u5b8c\u6210     |\n| -------- | ---------------- |\n| \u53c2\u6570     | cmd\uff1aIOC_GE_SYNC |\n| \u8fd4\u56de\u503c   | 0\uff1a\u6210\u529f<0\uff1a\u5931\u8d25  |\n| \u6ce8\u610f\u4e8b\u9879 | \u65e0               |\n"})}),"\n",(0,t.jsx)(e.h4,{id:"557-ioc_ge_cmd_buf_size",children:"5.5.7. IOC_GE_CMD_BUF_SIZE"}),"\n",(0,t.jsx)(e.p,{children:"\u63a5\u53e3\u8bed\u6cd5\uff1a"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"int ioctl(int fd, unsigned long cmd, unsinged int *size);\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"| \u529f\u80fd\u8bf4\u660e | \u83b7\u53d6cmd buffer size                                  |\n| -------- | ---------------------------------------------------- |\n| \u53c2\u6570     | cmd\uff1aIOC_GE_CMD_BUF_SIZEsize: \u6307\u541132bits\u65e0\u7b26\u53f7\u6570\u6307\u9488 |\n| \u8fd4\u56de\u503c   | 0\uff1a\u6210\u529f<0\uff1a\u5931\u8d25                                      |\n| \u6ce8\u610f\u4e8b\u9879 | cmd queue\u6a21\u5f0f\u53ef\u7528\uff0cnormal\u6a21\u5f0f\u4e0d\u53ef\u7528                  |\n"})}),"\n",(0,t.jsx)(e.h4,{id:"558-ioc_ge_add_dma_buf",children:"5.5.8. IOC_GE_ADD_DMA_BUF"}),"\n",(0,t.jsx)(e.p,{children:"\u63a5\u53e3\u8bed\u6cd5\uff1a"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"int ioctl(int fd, unsigned long cmd, struct dma_buf_info *buf);\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"| \u529f\u80fd\u8bf4\u660e | \u6dfb\u52a0DMA buffer                                          |\n| -------- | ------------------------------------------------------- |\n| \u53c2\u6570     | cmd\uff1aIOC_GE_ADD_DMA_BUFbuf: \u6307\u5411struct dma_buf_info\u6307\u9488 |\n| \u8fd4\u56de\u503c   | 0\uff1a\u6210\u529f<0\uff1a\u5931\u8d25                                         |\n| \u6ce8\u610f\u4e8b\u9879 | \u65e0                                                      |\n"})}),"\n",(0,t.jsx)(e.h4,{id:"559-ioc_ge_rm_dma_buf",children:"5.5.9. IOC_GE_RM_DMA_BUF"}),"\n",(0,t.jsx)(e.p,{children:"\u63a5\u53e3\u8bed\u6cd5\uff1a"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"int ioctl(int fd, unsigned long cmd, struct dma_buf_info *buf);\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"| \u529f\u80fd\u8bf4\u660e | \u5220\u9664DMA buffer                                         |\n| -------- | ------------------------------------------------------ |\n| \u53c2\u6570     | cmd\uff1aIOC_GE_RM_DMA_BUFbuf: \u6307\u5411struct dma_buf_info\u6307\u9488 |\n| \u8fd4\u56de\u503c   | 0\uff1a\u6210\u529f<0\uff1a\u5931\u8d25                                        |\n| \u6ce8\u610f\u4e8b\u9879 | \u65e0                                                     |\n"})}),"\n",(0,t.jsx)(e.h3,{id:"56-mpp\u5bf9ge\u63a5\u53e3\u7684\u5c01\u88c5",children:"5.6. MPP\u5bf9GE\u63a5\u53e3\u7684\u5c01\u88c5"}),"\n",(0,t.jsx)(e.p,{children:"\u7531\u4e8e\u9a71\u52a8\u652f\u6301\u975e\u547d\u4ee4\u961f\u5217\u548c\u547d\u4ee4\u961f\u5217\u4e24\u79cd\u6a21\u5f0f\uff0c\u5728\u63d0\u4f9b\u7684\u7528\u6237\u6001MPP\u63a5\u53e3\u4e2d\uff0c\u5bf9\u8c03\u7528\u9a71\u52a8\u7684\u63a5\u53e3\u8fdb\u884c\u4e86\u5c01\u88c5\uff0c\u4fdd\u6301\u4e86\u7edf\u4e00\u7684\u8c03\u7528API\uff0c \u5efa\u8bae\u7528\u6237\u7edf\u4e00\u4f7f\u7528MPP\u4e2d\u95f4\u5c42API\u3002\u5728\u547d\u4ee4\u961f\u5217\u6a21\u5f0f\u4e0b\uff0ctask\u4f1a\u5148\u7f13\u5b58\u5728\u7528\u6237\u6001\u7684cmd buffer\u4e2d\uff0c\u5f53\u8c03\u7528mpp_ge_emit\u540e\uff0c \u4f1a\u901a\u8fc7write\u63a5\u53e3\u628a\u547d\u4ee4\u5199\u5165\u5185\u6838\u7684ring buffer\u3002"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{src:"https://photos.100ask.net/artinchip-docs/d213-devkit/ge_function_cmdq_51.png",alt:"../../../_https://photos.100ask.net/artinchip-docs/d213-devkit/ge_function_cmdq_51.png"})}),"\n",(0,t.jsxs)(e.p,{children:["\u56fe 66 ",(0,t.jsx)(e.em,{children:"\u5e94\u7528\u8c03\u7528MPP\u6846\u67b6"})]}),"\n",(0,t.jsx)(e.h4,{id:"56-mpp_ge_open",children:"5.6. mpp_ge_open"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"struct mpp_ge *mpp_ge_open();\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"| \u529f\u80fd\u8bf4\u660e | \u6253\u5f00ge\u8bbe\u5907                         |\n| -------- | ---------------------------------- |\n| \u53c2\u6570\u5b9a\u4e49 | \u65e0                                 |\n| \u8fd4\u56de\u503c   | struct mpp_ge \u7ed3\u6784\u4f53\u6307\u9488NULL\uff1a\u5931\u8d25 |\n| \u6ce8\u610f\u4e8b\u9879 | \u65e0                                 |\n"})}),"\n",(0,t.jsx)(e.h4,{id:"562-mpp_ge_close",children:"5.6.2. mpp_ge_close"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"void mpp_ge_close(struct mpp_ge *ge);\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"| \u529f\u80fd\u8bf4\u660e | \u5173\u95edge\u8bbe\u5907                   |\n| -------- | ---------------------------- |\n| \u53c2\u6570\u5b9a\u4e49 | ge: struct mpp_ge \u7ed3\u6784\u4f53\u6307\u9488 |\n| \u8fd4\u56de\u503c   | \u65e0                           |\n| \u6ce8\u610f\u4e8b\u9879 | \u65e0                           |\n"})}),"\n",(0,t.jsx)(e.h4,{id:"563-mpp_ge_get_mode",children:"5.6.3. mpp_ge_get_mode"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"enum ge_mode mpp_ge_get_mode(struct mpp_ge *ge);\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"| \u529f\u80fd\u8bf4\u660e | \u83b7\u53d6GE\u6a21\u5f0f                                                   |\n| -------- | ------------------------------------------------------------ |\n| \u53c2\u6570\u5b9a\u4e49 | ge: struct mpp_ge \u7ed3\u6784\u4f53\u6307\u9488                                 |\n| \u8fd4\u56de\u503c   | enum ge_mode\u679a\u4e3e\u7c7b\u578b\u901a\u8fc7\u8fd4\u56de\u503c\u53ef\u4ee5\u83b7\u53d6GE\u662f\u5426\u5de5\u4f5c\u5728\u547d\u4ee4\u961f\u5217\u6a21\u5f0f |\n| \u6ce8\u610f\u4e8b\u9879 | \u65e0                                                           |\n"})}),"\n",(0,t.jsx)(e.h4,{id:"564-mpp_ge_add_dmabuf",children:"5.6.4. mpp_ge_add_dmabuf"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"int mpp_ge_add_dmabuf(struct mpp_ge *ge, int dma_fd);\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"| \u529f\u80fd\u8bf4\u660e | \u6dfb\u52a0DMA buffer                                    |\n| -------- | ------------------------------------------------- |\n| \u53c2\u6570\u5b9a\u4e49 | ge\uff1astruct mpp_ge \u7ed3\u6784\u4f53\u6307\u9488dma_fd\uff1adma buffer fd |\n| \u8fd4\u56de\u503c   | 0\uff1a\u6210\u529f<0\uff1a\u5931\u8d25                                   |\n| \u6ce8\u610f\u4e8b\u9879 | \u65e0                                                |\n"})}),"\n",(0,t.jsx)(e.h4,{id:"565-mpp_ge_rm_dmabuf",children:"5.6.5. mpp_ge_rm_dmabuf"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"int mpp_ge_rm_dmabuf(struct mpp_ge *ge, int dma_fd);\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"| \u529f\u80fd\u8bf4\u660e | \u5220\u9664DMA buffer                                    |\n| -------- | ------------------------------------------------- |\n| \u53c2\u6570\u5b9a\u4e49 | ge\uff1astruct mpp_ge \u7ed3\u6784\u4f53\u6307\u9488dma_fd\uff1adma buffer fd |\n| \u8fd4\u56de\u503c   | 0\uff1a\u6210\u529f<0\uff1a\u5931\u8d25                                   |\n| \u6ce8\u610f\u4e8b\u9879 | \u65e0                                                |\n"})}),"\n",(0,t.jsx)(e.h4,{id:"566-mpp_ge_fillrect",children:"5.6.6. mpp_ge_fillrect"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"int mpp_ge_fillrect(struct mpp_ge *ge, struct ge_fillrect *fillrect);\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"| \u529f\u80fd\u8bf4\u660e | \u77e9\u5f62\u586b\u5145                                                     |\n| -------- | ------------------------------------------------------------ |\n| \u53c2\u6570\u5b9a\u4e49 | ge: struct mpp_ge\u7ed3\u6784\u4f53\u6307\u9488fillrect:struct ge_fillrect\u7ed3\u6784\u4f53\u6307\u9488 |\n| \u8fd4\u56de\u503c   | 0\uff1a\u6210\u529f<0\uff1a\u5931\u8d25                                              |\n| \u6ce8\u610f\u4e8b\u9879 | normal\uff08\u975e\u547d\u4ee4\u961f\u5217\uff09\u6a21\u5f0f\u6b64\u63a5\u53e3\u662f\u540c\u6b65\u7684\u3002\u547d\u4ee4\u961f\u5217\u6a21\u5f0f\u6b64\u63a5\u53e3\u662f\u5f02\u6b65\u7684\uff1a\uff081\uff09\u5f53\u7528\u6237\u6001\u7684\u7f13\u5b58buffer\u8db3\u591f\u65f6\u5019\u4ec5\u628a\u547d\u4ee4\u7f13\u5b58\u5728\u7528\u6237\u6001\uff082\uff09\u5f53\u7528\u6237\u6001\u7684\u7f13\u5b58\u7a7a\u95f4\u4e0d\u591f\u7684\u65f6\u5019\uff0c\u5148\u901a\u8fc7write\u63a5\u53e3\uff0c\u628a\u7f13\u5b58\u7684\u547d\u4ee4\u5168\u90e8\u5199\u5165\u9a71\u52a8\uff0c\u7136\u540e\u518d\u628a\u5f53\u524d\u547d\u4ee4\u7f13\u5b58\u5230\u7528\u6237\u6001buffer |\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u77e9\u5f62\u586b\u5145\u5728\u76ee\u6807\u56fe\u50cf\u4e2d\u6307\u5b9a\u4e00\u5757\u77e9\u5f62\u533a\u57df\uff0c\u586b\u5145\u989c\u8272\u683c\u5f0f\u53ea\u80fd\u4e3aARGB8888\u683c\u5f0f\uff0c \u5728\u8fdb\u884c\u56fa\u5b9a\u989c\u8272\u586b\u5145\u7684\u65f6\u5019\uff0c\u4e0d\u652f\u6301scaler\uff0c\u4e0d\u652f\u630190/180/270\u5ea6\u65cb\u8f6c\uff0c\u4e0d\u652f\u6301\u955c\u50cf\uff0c \u586b\u5145\u7684\u989c\u8272\u53ef\u4ee5\u548c\u76ee\u6807\u5c42\u8fdb\u884calpha blending\u548ccolor key\u3002"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{src:"https://photos.100ask.net/artinchip-docs/d213-devkit/ge_function_fill2.png",alt:"../../../_https://photos.100ask.net/artinchip-docs/d213-devkit/ge_function_fill2.png"})}),"\n",(0,t.jsxs)(e.p,{children:["\u56fe 67 ",(0,t.jsx)(e.em,{children:"\u77e9\u5f62\u586b\u5145"})]}),"\n",(0,t.jsx)(e.h4,{id:"567-mpp_ge_bitblt",children:"5.6.7. mpp_ge_bitblt"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"int mpp_ge_bitblt(struct mpp_ge *ge, struct ge_bitblt *blt);\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"| \u529f\u80fd\u8bf4\u660e | \u4f4d\u5757\u642c\u79fb                                                     |\n| -------- | ------------------------------------------------------------ |\n| \u53c2\u6570\u5b9a\u4e49 | ge: struct mpp_ge\u7ed3\u6784\u4f53\u6307\u9488blt:struct ge_bitblt\u7ed3\u6784\u4f53\u6307\u9488    |\n| \u8fd4\u56de\u503c   | 0\uff1a\u6210\u529f<0\uff1a\u5931\u8d25                                              |\n| \u6ce8\u610f\u4e8b\u9879 | normal\uff08\u975e\u547d\u4ee4\u961f\u5217\uff09\u6a21\u5f0f\u6b64\u63a5\u53e3\u662f\u540c\u6b65\u7684\u3002\u547d\u4ee4\u961f\u5217\u6a21\u5f0f\u6b64\u63a5\u53e3\u662f\u5f02\u6b65\u7684\uff1a\uff081\uff09\u5f53\u7528\u6237\u6001\u7684\u7f13\u5b58buffer\u8db3\u591f\u65f6\u5019\u4ec5\u628a\u547d\u4ee4\u7f13\u5b58\u5728\u7528\u6237\u6001\uff082\uff09\u5f53\u7528\u6237\u6001\u7684\u7f13\u5b58\u7a7a\u95f4\u4e0d\u591f\u7684\u65f6\u5019\uff0c\u5148\u901a\u8fc7write\u63a5\u53e3\uff0c\u628a\u7f13\u5b58\u7684\u547d\u4ee4\u5168\u90e8\u5199\u5165\u9a71\u52a8\uff0c\u7136\u540e\u518d\u628a\u5f53\u524d\u547d\u4ee4\u7f13\u5b58\u5230\u7528\u6237\u6001buffer |\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u4f4d\u5757\u642c\u79fb\u53ef\u4ee5\u5206\u4e24\u79cd\u60c5\u51b5\uff1a"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsx)(e.li,{children:"\u539f\u56fe\u7684\u77e9\u5f62\u533a\u57df\u642c\u79fb\u5230\u76ee\u6807\u56fe\u7684\u77e9\u5f62\u533a\u57df\u4e2d\u4e0d\u8fdb\u884c\u7f29\u653e"}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{src:"https://photos.100ask.net/artinchip-docs/d213-devkit/ge_function_blit2.png",alt:"../../../_https://photos.100ask.net/artinchip-docs/d213-devkit/ge_function_blit2.png"})}),"\n",(0,t.jsxs)(e.p,{children:["\u56fe 68 ",(0,t.jsx)(e.em,{children:"\u4e0d\u8fdb\u884c\u7f29\u653e"})]}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsx)(e.li,{children:"\u539f\u56fe\u7684\u77e9\u5f62\u533a\u57df\u642c\u79fb\u5230\u76ee\u6807\u56fe\u7684\u77e9\u5f62\u533a\u57df\u4e2d\u540c\u65f6\u8fdb\u884c\u653e\u5927\u6216\u8005\u7f29\u5c0f"}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{src:"https://photos.100ask.net/artinchip-docs/d213-devkit/ge_function_stretchblit2.png",alt:"../../../_https://photos.100ask.net/artinchip-docs/d213-devkit/ge_function_stretchblit2.png"})}),"\n",(0,t.jsxs)(e.p,{children:["\u56fe 69 ",(0,t.jsx)(e.em,{children:"\u8fdb\u884c\u7f29\u653e"})]}),"\n",(0,t.jsx)(e.p,{children:"\u5728\u8fdb\u884c\u4f4d\u5757\u642c\u79fb\u7684\u540c\u65f6\u53ef\u4ee5\u8fdb\u884calpha blending\u548ccolor key\uff0c\u540c\u65f6\u4e5f\u652f\u630190/180/270\u5ea6\u65cb\u8f6c\u548c\u955c\u50cf\u3002"}),"\n",(0,t.jsx)(e.h4,{id:"568-mpp_ge_rotate",children:"5.6.8. mpp_ge_rotate"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"int mpp_ge_rotate(struct mpp_ge *ge, struct ge_rotation *rot);\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"| \u529f\u80fd\u8bf4\u660e | \u4efb\u610f\u89d2\u5ea6\u65cb\u8f6c                                                 |\n| -------- | ------------------------------------------------------------ |\n| \u53c2\u6570\u5b9a\u4e49 | ge: struct mpp_ge\u7ed3\u6784\u4f53\u6307\u9488rot:struct ge_rotation\u7ed3\u6784\u4f53\u6307\u9488  |\n| \u8fd4\u56de\u503c   | 0\uff1a\u6210\u529f<0\uff1a\u5931\u8d25                                              |\n| \u6ce8\u610f\u4e8b\u9879 | normal\uff08\u975e\u547d\u4ee4\u961f\u5217\uff09\u6a21\u5f0f\u6b64\u63a5\u53e3\u662f\u540c\u6b65\u7684\u3002\u547d\u4ee4\u961f\u5217\u6a21\u5f0f\u6b64\u63a5\u53e3\u662f\u5f02\u6b65\u7684\uff1a\uff081\uff09\u5f53\u7528\u6237\u6001\u7684\u7f13\u5b58buffer\u8db3\u591f\u65f6\u5019\u4ec5\u628a\u547d\u4ee4\u7f13\u5b58\u5728\u7528\u6237\u6001\uff082\uff09\u5f53\u7528\u6237\u6001\u7684\u7f13\u5b58\u7a7a\u95f4\u4e0d\u591f\u7684\u65f6\u5019\uff0c\u5148\u901a\u8fc7write\u63a5\u53e3\uff0c\u628a\u7f13\u5b58\u7684\u547d\u4ee4\u5168\u90e8\u5199\u5165\u9a71\u52a8\uff0c\u7136\u540e\u518d\u628a\u5f53\u524d\u547d\u4ee4\u7f13\u5b58\u5230\u7528\u6237\u6001buffer |\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u8fdb\u884c\u4efb\u610f\u89d2\u5ea6\u65cb\u8f6c\u7684\u65f6\u5019\u53ef\u4ee5\u8fdb\u884calpha blending\uff0c\u5e76\u4e14\u53ef\u4ee5\u6307\u5b9a\u539f\u56fe\u548c\u76ee\u6807\u56fe\u7684\u65cb\u8f6c\u4e2d\u5fc3\uff0c\u4efb\u610f\u89d2\u5ea6\u65cb\u8f6c\u539f\u56fe\u548c\u76ee\u6807\u56fe\u90fd\u53ea\u652f\u6301RGB\u683c\u5f0f\u3002 \u5176\u4e2d\u65cb\u8f6c\u89d2\u5ea6\u4f20\u7ed9\u9a71\u52a8\u7684\u662f\u65cb\u8f6c\u89d2\u5ea6\u7684sin\u548ccos\u503c\uff0c\u4e3a2.12\u5b9a\u70b9\u6570\uff0c\u5176\u4e2d\u5c0f\u6570\u90e8\u520612bits \uff0c\u5219\u5e94\u7528\u7a0b\u5e8f\u8ba1\u7b97sin\u548ccos\u503c\u7684\u65b9\u6cd5\u5982\u4e0b\uff1a"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{src:"https://photos.100ask.net/artinchip-docs/d213-devkit/ge_function_rot12.png",alt:"../../../_https://photos.100ask.net/artinchip-docs/d213-devkit/ge_function_rot12.png"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"#include <stdio.h>\n#include <math.h>\n\n#define PI 3.14159265\n\n#define SIN(x) (sin(x* PI / 180.0))\n#define COS(x) (cos(x* PI / 180.0))\n\ndouble degree = 30.0  // (0 <= degree < 360)\nangle_sin = (int)(SIN(x) * 4096);\nangle_cos = (int)(COS(x) * 4096);\n// \u5e94\u7528\u7a0b\u5e8f\u4e5f\u53ef\u4ee5\u9884\u5148\u751f\u6210\u9700\u8981\u7684\u89d2\u5ea6\u7684sin\u548ccos\u503c\u5217\u8868\uff0c\u901a\u8fc7\u67e5\u8868\u51cf\u5c0f\u8ba1\u7b97\u91cf\n"})}),"\n",(0,t.jsx)(e.h4,{id:"569-mpp_ge_emit",children:"5.6.9. mpp_ge_emit"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"iint mpp_ge_emit(struct mpp_ge *ge);\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"| \u529f\u80fd\u8bf4\u660e | \u5411\u9a71\u52a8\u53d1\u9001\u547d\u4ee4                                               |\n| -------- | ------------------------------------------------------------ |\n| \u53c2\u6570\u5b9a\u4e49 | ge: struct mpp_ge\u7ed3\u6784\u4f53\u6307\u9488                                  |\n| \u8fd4\u56de\u503c   | 0\uff1a\u6210\u529f<0\uff1a\u5931\u8d25                                              |\n| \u6ce8\u610f\u4e8b\u9879 | normal\uff08\u975e\u547d\u4ee4\u961f\u5217\uff09\u6a21\u5f0f\u6b64\u63a5\u53e3\u4e3a\u7a7a\uff0c\u4e0d\u4ea7\u751f\u4efb\u4f55\u4f5c\u7528\u547d\u4ee4\u961f\u5217\u6a21\u5f0f\u6b64\u63a5\u53e3\u901a\u8fc7write\u63a5\u53e3\uff0c\u628a\u7528\u6237\u6001buffer\u4e2d\u7f13\u5b58\u7684\u547d\u4ee4\u90fd\u5199\u5165\u9a71\u52a8 |\n"})}),"\n",(0,t.jsx)(e.h4,{id:"560-mpp_ge_sync",children:"5.60. mpp_ge_sync"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"iint mpp_ge_sync(struct mpp_ge *ge);\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"| \u529f\u80fd\u8bf4\u660e | \u963b\u585e\u7b49\u5f85\u6240\u6709\u4efb\u52a1\u6267\u884c\u5b8c\u6210                                     |\n| -------- | ------------------------------------------------------------ |\n| \u53c2\u6570\u5b9a\u4e49 | ge: struct mpp_ge\u7ed3\u6784\u4f53\u6307\u9488                                  |\n| \u8fd4\u56de\u503c   | 0\uff1a\u6210\u529f<0\uff1a\u5931\u8d25                                              |\n| \u6ce8\u610f\u4e8b\u9879 | normal\uff08\u975e\u547d\u4ee4\u961f\u5217\uff09\u6a21\u5f0f\u6b64\u63a5\u53e3\u4e3a\u7a7a\uff0c\u4e0d\u4ea7\u751f\u4efb\u4f55\u4f5c\u7528\u547d\u4ee4\u961f\u5217\u6a21\u5f0f\u6b64\u63a5\u53e3\u901a\u8fc7\u8c03\u7528IOC_GE_SYNC\u63a5\u53e3\uff0c\u7b49\u5f85\u6240\u6709\u4efb\u52a1\u90fd\u5b8c\u6210 |\n"})}),"\n",(0,t.jsx)(e.h3,{id:"57-app-\u53c2\u8003",children:"5.7. APP \u53c2\u8003"}),"\n",(0,t.jsx)(e.p,{children:"Demo\u4ee3\u7801\u89c1test-ge/ge_bitblt.c\uff0c\u5982\u4e0b"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:'#include <signal.h>\n#include <sys/time.h>\n#include <linux/fb.h>\n#include <artinchip/sample_base.h>\n#include <video/artinchip_fb.h>\n#include <linux/dma-buf.h>\n#include <linux/dma-heap.h>\n#include "mpp_ge.h"\n\n#define FB_DEV              "/dev/fb0"\n#define DMA_HEAP_DEV        "/dev/dma_heap/reserved"\n\nstatic int g_screen_w = 0;\nstatic int g_screen_h = 0;\nstatic int g_fb_fd = 0;\nstatic int g_fb_len = 0;\nstatic int g_fb_stride = 0;\nstatic unsigned int g_fb_format = 0;\nstatic unsigned int g_fb_phy = 0;\nunsigned char *g_fb_buf = NULL;\n\nstatic const char sopts[] = "w:h:f:i:u";\nstatic const struct option lopts[] = {\n    {"width",       required_argument, NULL, \'w\'},\n    {"height",      required_argument, NULL, \'h\'},\n    {"format",      required_argument, NULL, \'f\'},\n    {"input",       required_argument, NULL, \'i\'},\n    {"usage",       no_argument,       NULL, \'u\'},\n};\n\nstatic int fb_open(void)\n{\n    struct fb_fix_screeninfo fix;\n    struct fb_var_screeninfo var;\n    struct aicfb_layer_data layer;\n\n    g_fb_fd = open(FB_DEV, O_RDWR);\n    if (g_fb_fd == -1) {\n        ERR("open %s", FB_DEV);\n        return -1;\n    }\n\n    if (ioctl(g_fb_fd, FBIOGET_FSCREENINFO,&fix) < 0) {\n        ERR("ioctl FBIOGET_FSCREENINFO");\n        close(g_fb_fd);\n        return -1;\n    }\n\n    if (ioctl(g_fb_fd, FBIOGET_VSCREENINFO,&var) < 0) {\n        ERR("ioctl FBIOGET_VSCREENINFO");\n        close(g_fb_fd);\n        return -1;\n    }\n\n    if(ioctl(g_fb_fd, AICFB_GET_FB_LAYER_CONFIG,&layer) < 0) {\n        ERR("ioctl FBIOGET_VSCREENINFO");\n        close(g_fb_fd);\n        return -1;\n    }\n\n    g_screen_w = var.xres;\n    g_screen_h = var.yres;\n    g_fb_len = fix.smem_len;\n    g_fb_phy = fix.smem_start;\n    g_fb_stride = layer.buf.stride[0];\n    g_fb_format = layer.buf.format;\n\n    g_fb_buf = mmap(NULL, g_fb_len,\n            PROT_READ | PROT_WRITE, MAP_FILE | MAP_SHARED,\n                g_fb_fd, 0);\n    if (g_fb_buf == (unsigned char *)-1) {\n        ERR("mmap framebuffer");\n        close(g_fb_fd);\n        g_fb_fd = -1;\n        g_fb_buf = NULL;\n        return -1;\n    }\n\n    DBG("screen_w = %d, screen_h = %d, stride = %d, format = %d\\n",\n            var.xres, var.yres, g_fb_stride, g_fb_format);\n    return 0;\n}\n\nstatic void fb_close(void)\n{\n    if (!g_fb_buf) {\n        munmap(g_fb_buf, g_fb_len);\n    }\n    if (g_fb_fd > 0)\n        close(g_fb_fd);\n}\n\nstatic void usage(char *app)\n{\n    printf("Usage: %s [Options], built on %s %s\\n", app,__DATE__,_TIME__);\n    printf("\\t-w, --width       image width\\n");\n    printf("\\t-h, --height      image height\\n");\n    printf("\\t-i, --input       need an argb8888 bmp \\n");\n    printf("\\t-u, --usage\\n\\n");\n    printf("Example: %s -w 480 -h 320 -i my.bmp\\n", app);\n}\n\nstatic int dmabuf_request_one(int fd, int len)\n{\n    int ret;\n    struct dma_heap_allocation_data data = {0};\n\n    if (len < 0) {\n        ERR("Invalid len %d\\n", len);\n        return -1;\n    }\n\n    data.fd = 0;\n    data.len = len;\n    data.fd_flags = O_RDWR;\n    data.heap_flags = 0;\n    ret = ioctl(fd, DMA_HEAP_IOCTL_ALLOC,&data);\n    if (ret < 0) {\n        ERR("ioctl() failed! errno: %d[%s]\\n", errno, strerror(errno));\n        return -1;\n    }\n\n    DBG("Get dma_heap fd: %d\\n", data.fd);\n\n    return data.fd;\n}\n\nstatic int draw_src_dmabuf(int dmabuf_fd, int fd, int len)\n{\n    unsigned char * buf = NULL;\n    int ret = 0;\n\n    buf = mmap(NULL, len, PROT_READ|PROT_WRITE, MAP_SHARED, dmabuf_fd, 0);\n    if (buf == MAP_FAILED) {\n        ERR("mmap() failed! errno: %d[%s]\\n", errno, strerror(errno));\n        return -1;\n    }\n\n    ret = read(fd, buf, len);\n    if (ret != len) {\n        ERR("read(%d) return %d. errno: %d[%s]\\n", len,\n            ret, errno, strerror(errno));\n        return -1;\n    }\n\n    munmap(buf, len);\n    return 0;\n}\n\nint main(int argc, char **argv)\n{\n    struct mpp_ge *ge = NULL;\n    int ret = 0;\n    int src_fd = -1;\n    int src_dmabuf_fd = -1;\n    int heap_fd = -1;\n    int fsize = 0;\n    int width = 176;\n    int height = 144;\n    struct ge_bitblt blt = {0};\n\n    while ((ret = getopt_long(argc, argv, sopts, lopts, NULL)) != -1) {\n        switch (ret) {\n        case \'u\':\n            usage(argv[0]);\n            goto EXIT;\n        case \'w\':\n            width = str2int(optarg);\n            continue;\n        case \'h\':\n            height = str2int(optarg);\n            continue;\n        case \'i\':\n            src_fd = open(optarg, O_RDONLY);\n            if (src_fd < 0) {\n                ERR("Failed to open %s. errno: %d[%s]\\n",\n                    optarg, errno, strerror(errno));\n                return -1;\n            }\n            fsize = lseek(src_fd, 0, SEEK_END);\n            lseek(src_fd, 54, SEEK_SET);\n            break;\n        default:\n            ERR("Invalid parameter: %#x\\n", ret);\n            goto EXIT;\n        }\n    }\n\n    ge = mpp_ge_open();\n    if (!ge) {\n        ERR("open ge device\\n");\n        exit(1);\n    }\n\n    if (fb_open()) {\n        fb_close();\n        mpp_ge_close(ge);\n        ERR("fb_open\\n");\n        exit(1);\n    }\n\n    heap_fd = open(DMA_HEAP_DEV, O_RDWR);\n    if (heap_fd < 0) {\n        ERR("Failed to open %s, errno: %d[%s]\\n",\n            DMA_HEAP_DEV, errno, strerror(errno));\n        goto EXIT;\n    }\n\n    src_dmabuf_fd = dmabuf_request_one(heap_fd, fsize);\n    if (src_dmabuf_fd < 0) {\n        ERR("Failed to request dmabuf\\n");\n        goto EXIT;\n    }\n\n    draw_src_dmabuf(src_dmabuf_fd, src_fd, fsize - 54);\n    mpp_ge_add_dmabuf(ge, src_dmabuf_fd);\n\n    /* source buffer */\n    blt.src_buf.buf_type = MPP_DMA_BUF_FD;\n    blt.src_buf.fd[0] = src_dmabuf_fd;\n    blt.src_buf.stride[0] = width * 4;\n    blt.src_buf.size.width = width;\n    blt.src_buf.size.height = height;\n    blt.src_buf.format = MPP_FMT_ARGB_8888;\n\n    blt.src_buf.crop_en = 0;\n\n    /* dstination buffer */\n    blt.dst_buf.buf_type = MPP_PHY_ADDR;\n    blt.dst_buf.phy_addr[0] = g_fb_phy;\n    blt.dst_buf.stride[0] = g_fb_stride;\n    blt.dst_buf.size.width = g_screen_w;\n    blt.dst_buf.size.height = g_screen_h;\n    blt.dst_buf.format = g_fb_format;\n\n    blt.ctrl.flags = GE_FLIP_H;\n\n    blt.dst_buf.crop_en = 1;\n    blt.dst_buf.crop.x = 0;\n    blt.dst_buf.crop.y = 0;\n    blt.dst_buf.crop.width = width;\n    blt.dst_buf.crop.height = height;\n\n    ret = mpp_ge_bitblt(ge,&blt);\n    DBG("bitblt task:%d\\n", ret);\n\n    ret = mpp_ge_emit(ge);\n    DBG("emit task:%d\\n", ret);\n\n    ret = mpp_ge_sync(ge);\n    DBG("sync task:%d\\n", ret);\n\n    return ret;\n\nEXIT:\n    if (heap_fd > 0)\n        close(heap_fd);\n\n    if (ge)\n        mpp_ge_close(ge);\n\n    fb_close();\n    return -1;\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"6-\u5e38\u89c1\u95ee\u9898",children:"6. \u5e38\u89c1\u95ee\u9898"}),"\n",(0,t.jsx)(e.p,{children:"\u5f85\u5b8c\u5584"})]})}function o(n={}){const{wrapper:e}={...(0,r.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(a,{...n})}):a(n)}},1151:(n,e,i)=>{i.d(e,{Z:()=>d,a:()=>s});var t=i(7294);const r={},l=t.createContext(r);function s(n){const e=t.useContext(l);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:s(n.components),t.createElement(l.Provider,{value:e},n.children)}}}]);