"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7515],{5740:(e,n,d)=>{d.r(n),d.d(n,{assets:()=>t,contentTitle:()=>r,default:()=>m,frontMatter:()=>s,metadata:()=>l,toc:()=>_});var c=d(5893),i=d(1151);const s={sidebar_position:8},r="\u9a71\u52a8\u652f\u6301",l={id:"D213-DevKit/part5/03-8_DriverSupport",title:"\u9a71\u52a8\u652f\u6301",description:"1. Clock \u9a71\u52a8",source:"@site/docs/D213-DevKit/part5/03-8_DriverSupport.md",sourceDirName:"D213-DevKit/part5",slug:"/D213-DevKit/part5/03-8_DriverSupport",permalink:"/docs/D213-DevKit/part5/03-8_DriverSupport",draft:!1,unlisted:!1,editUrl:"https://github.com/100askTeam/ArtInChip-Docs/tree/master/docs/D213-DevKit/part5/03-8_DriverSupport.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"d213dkSidebar",previous:{title:"U-Boot \u9636\u6bb5",permalink:"/docs/D213-DevKit/part5/03-7_U-BootStage"},next:{title:"\u5206\u533a\u914d\u7f6e",permalink:"/docs/D213-DevKit/part5/03-9_PartitionConfiguration"}},t={},_=[{value:"1. Clock \u9a71\u52a8",id:"1-clock-\u9a71\u52a8",level:2},{value:"1.1. \u9a71\u52a8\u6846\u67b6",id:"11-\u9a71\u52a8\u6846\u67b6",level:3},{value:"1.2. \u9a71\u52a8\u63a5\u53e3",id:"12-\u9a71\u52a8\u63a5\u53e3",level:3},{value:"1.3. \u521d\u59cb\u5316\u548c\u4f7f\u7528",id:"13-\u521d\u59cb\u5316\u548c\u4f7f\u7528",level:3},{value:"2. Reset \u9a71\u52a8",id:"2-reset-\u9a71\u52a8",level:2},{value:"2.1. \u9a71\u52a8\u6846\u67b6",id:"21-\u9a71\u52a8\u6846\u67b6",level:3},{value:"2.2. \u9a71\u52a8\u63a5\u53e3",id:"22-\u9a71\u52a8\u63a5\u53e3",level:3},{value:"2.3. \u521d\u59cb\u5316\u548c\u4f7f\u7528",id:"23-\u521d\u59cb\u5316\u548c\u4f7f\u7528",level:3},{value:"3. DMA \u9a71\u52a8",id:"3-dma-\u9a71\u52a8",level:2},{value:"3.1. \u9a71\u52a8\u6846\u67b6",id:"31-\u9a71\u52a8\u6846\u67b6",level:3},{value:"3.2. \u9a71\u52a8\u63a5\u53e3",id:"32-\u9a71\u52a8\u63a5\u53e3",level:3},{value:"3.3. \u5b9e\u73b0\u8bf4\u660e",id:"33-\u5b9e\u73b0\u8bf4\u660e",level:3},{value:"3.4. \u521d\u59cb\u5316\u6d41\u7a0b",id:"34-\u521d\u59cb\u5316\u6d41\u7a0b",level:3},{value:"4. SPI \u9a71\u52a8",id:"4-spi-\u9a71\u52a8",level:2},{value:"4.1. \u9a71\u52a8\u6846\u67b6",id:"41-\u9a71\u52a8\u6846\u67b6",level:3},{value:"4.2. \u9a71\u52a8\u63a5\u53e3",id:"42-\u9a71\u52a8\u63a5\u53e3",level:3},{value:"4.3. \u521d\u59cb\u5316\u6d41\u7a0b",id:"43-\u521d\u59cb\u5316\u6d41\u7a0b",level:3},{value:"4.4. DMA \u7684\u652f\u6301",id:"44-dma-\u7684\u652f\u6301",level:3},{value:"4.5. QUAD SPI \u7684\u652f\u6301",id:"45-quad-spi-\u7684\u652f\u6301",level:3},{value:"5. SPI NAND \u9a71\u52a8",id:"5-spi-nand-\u9a71\u52a8",level:2},{value:"5.1. \u9a71\u52a8\u6846\u67b6",id:"51-\u9a71\u52a8\u6846\u67b6",level:3},{value:"5.2. \u9a71\u52a8\u63a5\u53e3",id:"52-\u9a71\u52a8\u63a5\u53e3",level:3},{value:"5.3. \u521d\u59cb\u5316\u548c\u8bfb\u5199",id:"53-\u521d\u59cb\u5316\u548c\u8bfb\u5199",level:3},{value:"5.4. \u6dfb\u52a0\u65b0\u5668\u4ef6",id:"54-\u6dfb\u52a0\u65b0\u5668\u4ef6",level:3},{value:"6. SPI NOR \u9a71\u52a8",id:"6-spi-nor-\u9a71\u52a8",level:2},{value:"6.1. \u9a71\u52a8\u6846\u67b6",id:"61-\u9a71\u52a8\u6846\u67b6",level:3},{value:"6.2. \u9a71\u52a8\u63a5\u53e3",id:"62-\u9a71\u52a8\u63a5\u53e3",level:3},{value:"6.3. \u521d\u59cb\u5316\u548c\u8bfb\u5199",id:"63-\u521d\u59cb\u5316\u548c\u8bfb\u5199",level:3},{value:"6.4. \u6dfb\u52a0\u65b0\u5668\u4ef6",id:"64-\u6dfb\u52a0\u65b0\u5668\u4ef6",level:3},{value:"7. MMC \u9a71\u52a8",id:"7-mmc-\u9a71\u52a8",level:2},{value:"7.1. \u9a71\u52a8\u6846\u67b6",id:"71-\u9a71\u52a8\u6846\u67b6",level:3},{value:"7.2. \u9a71\u52a8\u63a5\u53e3",id:"72-\u9a71\u52a8\u63a5\u53e3",level:3},{value:"7.3. \u521d\u59cb\u5316\u548c\u4f7f\u7528",id:"73-\u521d\u59cb\u5316\u548c\u4f7f\u7528",level:3},{value:"7.3.1. \u7ed1\u5b9a\u9636\u6bb5",id:"731-\u7ed1\u5b9a\u9636\u6bb5",level:4},{value:"7.3.2. Probe \u6d41\u7a0b",id:"732-probe-\u6d41\u7a0b",level:4},{value:"7.3.3. \u8bfb\u5199\u6d41\u7a0b",id:"733-\u8bfb\u5199\u6d41\u7a0b",level:4}];function a(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h1,{id:"\u9a71\u52a8\u652f\u6301",children:"\u9a71\u52a8\u652f\u6301"}),"\n",(0,c.jsx)(n.h2,{id:"1-clock-\u9a71\u52a8",children:"1. Clock \u9a71\u52a8"}),"\n",(0,c.jsx)(n.p,{children:"\u672c\u7ae0\u8282\u63cf\u8ff0 ArtInChip \u5e73\u53f0\u7684 U-Boot \u65f6\u949f\u914d\u7f6e\u76f8\u5173\u5185\u5bb9\u3002"}),"\n",(0,c.jsx)(n.h3,{id:"11-\u9a71\u52a8\u6846\u67b6",children:"1.1. \u9a71\u52a8\u6846\u67b6"}),"\n",(0,c.jsx)(n.p,{children:"U-Boot \u9a71\u52a8\u6a21\u578b\u652f\u6301 Clock\uff0cArtInChip \u5e73\u53f0\u4e2d Clock \u9a71\u52a8\u57fa\u4e8e\u8be5\u6846\u67b6\u8fdb\u884c\u5b9e\u73b0\u3002 \u76f8\u5173\u914d\u7f6e\u4e3a\uff1a"}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:"CONFIG_CLK"}),"\n",(0,c.jsx)(n.li,{children:"CONFIG_CLK_ARTINCHIP"}),"\n",(0,c.jsx)(n.li,{children:"CONFIG_CLK_ARTINCHIP_CMU"}),"\n",(0,c.jsx)(n.li,{children:"CONFIG_SPL_CLK_ARTINCHIP"}),"\n",(0,c.jsx)(n.li,{children:"CONFIG_SPL_CLK_ARTINCHIP_CMU"}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(n.p,{children:"\u76f8\u5173\u6e90\u7801\u6709\uff1a"}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"include/clk.h"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"include/clk-uclass.h"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"drivers/clk/clk.c"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"drivers/clk/clk-uclass.c"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"drivers/clk/artinchip/clk-aic.h"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"drivers/clk/artinchip/clk-artinchip.c"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"drivers/clk/artinchip/clk-cmu.c"})}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(n.h3,{id:"12-\u9a71\u52a8\u63a5\u53e3",children:"1.2. \u9a71\u52a8\u63a5\u53e3"}),"\n",(0,c.jsx)(n.p,{children:"\u76f8\u5173\u7684 Clock \u9a71\u52a8\u63a5\u53e3\u6709\uff1a"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"int clk_get_by_index_platdata(struct udevice *dev, int index,\n                              struct phandle_1_arg *cells, struct clk *clk);\nint clk_get_by_index(struct udevice *dev, int index, struct clk *clk);\nint clk_get_by_index_nodev(ofnode node, int index, struct clk *clk);\nint clk_get_bulk(struct udevice *dev, struct clk_bulk *bulk);\nint clk_get_by_name(struct udevice *dev, const char *name, struct clk *clk);\nint clk_release_all(struct clk *clk, int count);\nint clk_enable(struct clk *clk);\nint clk_disable(struct clk *clk);\nulong clk_set_rate(struct clk *clk, ulong rate);\nulong clk_get_rate(struct clk *clk);\n"})}),"\n",(0,c.jsx)(n.h3,{id:"13-\u521d\u59cb\u5316\u548c\u4f7f\u7528",children:"1.3. \u521d\u59cb\u5316\u548c\u4f7f\u7528"}),"\n",(0,c.jsx)(n.p,{children:"\u901a\u5e38\u786c\u4ef6\u8bbe\u5907\u521d\u59cb\u5316\u65f6\uff0c\u9700\u8981\u914d\u7f6e\u5bf9\u5e94\u7684\u65f6\u949f\u3002Clock \u9a71\u52a8\u7684 probe \u5728\u65f6\u949f\u8bbe\u5907\u7b2c\u4e00\u6b21\u88ab\u83b7\u53d6\u65f6\u89e6\u53d1\u3002"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"clk_get_by_index(); // drivers/clk/clk-uclass.c\n|-> clk_get_by_index_tail();\n    |-> uclass_get_device_by_ofnode(UCLASS_CLK, args->node, &dev_clk);\n        |-> uclass_find_device_by_ofnode(id, node, &dev);\n        |-> uclass_get_device_tail(dev, ret, devp); // drivers/core/uclass.c\n            |-> device_probe(dev); // drivers/core/device.c\n                |-> drv->probe(dev);\n                    aic_clk_probe(dev);\n                    // drivers/clk/artinchip/clk-cmu.c\n"})}),"\n",(0,c.jsx)(n.p,{children:"\u8bbe\u5907\u4f7f\u7528\u7684\u65f6\u949f\u901a\u8fc7\u65f6\u949f\u6811\u8fdb\u884c\u7ba1\u7406\u3002\u5728\u65f6\u949f\u6811\u4e2d\uff0c\u6bcf\u4e00\u4e2a\u65f6\u949f\u90fd\u88ab\u5206\u914d\u4e00\u4e2a\u5177\u4f53\u7684 ID\uff0c \u5e76\u4e14\u5728 DTS \u4e2d\u914d\u7f6e\u7ed9\u9700\u8981\u7684\u786c\u4ef6\u8bbe\u5907\u3002\u8bbe\u5907\u521d\u59cb\u5316\u65f6\uff0c\u901a\u8fc7 FDT \u83b7\u53d6\u5bf9\u5e94\u7684\u65f6\u949f\u8bbe\u5907\u3002"}),"\n",(0,c.jsx)(n.p,{children:"DTS \u4e2d\u65f6\u949f\u914d\u7f6e\u793a\u4f8b\uff1a"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:'dma: dma-controller@10000000 {\n    compatible = "artinchip,aic-dma";\n    ...\n    clocks = <&ccu CLK_DMA>;\n    ...\n};\n'})}),"\n",(0,c.jsx)(n.p,{children:"\u76f8\u5173 ID \u5b9a\u4e49\u53ef\u53c2\u8003\uff1a"}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"include/dt-bindings/clock/artinchip,aic-cmu.h"})}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(n.p,{children:"\u83b7\u53d6\u65f6\u949f\u8bbe\u5907\u7684\u6d41\u7a0b\uff1a"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"clk_get_by_index(dev, index, clk); // drivers/clk/clk-uclass.c\n|   // \u6b64\u5904 index \u662f DTS \u4e2d\u914d\u7f6e\u7ed9\u8be5\u8bbe\u5907\u7684\u7b2c\u51e0\u4e2a\u65f6\u949f\n|\n|-> clk_get_by_index_tail();\n    |-> uclass_get_device_by_ofnode(UCLASS_CLK, args->node, &dev_clk);\n    |-> clk_of_xlate_default(clk, args);\n        |-> clk->id = args->args[0]; // \u83b7\u53d6\u5230\u5177\u4f53\u7684\u65f6\u949f ID\n"})}),"\n",(0,c.jsxs)(n.p,{children:["\u9700\u8981\u8bbe\u7f6e\u548c\u83b7\u53d6\u76f8\u5173\u65f6\u949f\u4fe1\u606f\u65f6\uff0c\u901a\u8fc7 ",(0,c.jsx)(n.code,{children:"clk->id"})," \u8bbf\u95ee\u65f6\u949f\u6811\u3002"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"clk_set_rate(clk, rate); // drivers/clk/clk-uclass.c\n|-> ops->set_rate(clk, rate);\n    artinchip_clk_set_rate(clk, rate); // drivers/clk/artinchip/clk-artinchip.c\n    |-> aic_get_clk_info(priv->tree, clk->id, &index);\n        // \u9a71\u52a8\u5185\u90e8\uff0c\u4f7f\u7528 clk-id \u83b7\u53d6\u5bf9\u5e94\u7684\u65f6\u949f\u8282\u70b9\n"})}),"\n",(0,c.jsx)(n.h2,{id:"2-reset-\u9a71\u52a8",children:"2. Reset \u9a71\u52a8"}),"\n",(0,c.jsx)(n.p,{children:"\u672c\u7ae0\u8282\u63cf\u8ff0 ArtInChip \u5e73\u53f0\u7684 U-Boot \u590d\u4f4d\u9a71\u52a8\u76f8\u5173\u5185\u5bb9\u3002"}),"\n",(0,c.jsx)(n.h3,{id:"21-\u9a71\u52a8\u6846\u67b6",children:"2.1. \u9a71\u52a8\u6846\u67b6"}),"\n",(0,c.jsx)(n.p,{children:"U-Boot \u9a71\u52a8\u6a21\u578b\u652f\u6301 Reset\uff0cArtInChip \u5e73\u53f0\u4e2d Reset \u9a71\u52a8\u57fa\u4e8e\u8be5\u6846\u67b6\u8fdb\u884c\u5b9e\u73b0\u3002 \u76f8\u5173\u914d\u7f6e\u4e3a\uff1a"}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:"CONFIG_DM_RESET"}),"\n",(0,c.jsx)(n.li,{children:"CONFIG_RESET_ARTINCHIP"}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(n.p,{children:"\u76f8\u5173\u6e90\u7801\u6709\uff1a"}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"include/reset.h"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"include/reset-uclass.h"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"drivers/reset/reset-uclass.c"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"drivers/reset/reset-artinchip.c"})}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(n.h3,{id:"22-\u9a71\u52a8\u63a5\u53e3",children:"2.2. \u9a71\u52a8\u63a5\u53e3"}),"\n",(0,c.jsx)(n.p,{children:"\u76f8\u5173\u7684\u590d\u4f4d\u9a71\u52a8\u63a5\u53e3\u6709\uff1a"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"int reset_get_by_index(struct udevice *dev, int index,\n                        struct reset_ctl *reset_ctl);\nint reset_get_by_name(struct udevice *dev, const char *name,\n                        struct reset_ctl *reset_ctl);\nint reset_get_by_index_nodev(ofnode node, int index,\n                                struct reset_ctl *reset_ctl);\nint reset_get_bulk(struct udevice *dev, struct reset_ctl_bulk *bulk);\nint reset_request(struct reset_ctl *reset_ctl);\nint reset_free(struct reset_ctl *reset_ctl);\nint reset_assert(struct reset_ctl *reset_ctl);\nint reset_deassert(struct reset_ctl *reset_ctl);\n"})}),"\n",(0,c.jsx)(n.h3,{id:"23-\u521d\u59cb\u5316\u548c\u4f7f\u7528",children:"2.3. \u521d\u59cb\u5316\u548c\u4f7f\u7528"}),"\n",(0,c.jsx)(n.p,{children:"\u901a\u5e38\u786c\u4ef6\u8bbe\u5907\u521d\u59cb\u5316\u65f6\uff0c\u9700\u8981\u5bf9\u5176\u8fdb\u884c\u4e00\u6b21\u590d\u4f4d\u3002Reset \u9a71\u52a8\u7684 probe \u5728\u590d\u4f4d\u63a7\u5236\u5668\u7b2c\u4e00\u6b21\u88ab\u83b7\u53d6\u65f6\u89e6\u53d1\u3002"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:'reset_get_by_index(); // drivers/reset/reset-uclass.c\n|-> reset_get_by_index_tail(ret, dev_ofnode(dev), &args, "resets",\n    |                       index > 0, reset_ctl);\n    |-> uclass_get_device_by_ofnode(UCLASS_RESET, args->node, &dev_reset);\n        |-> uclass_find_device_by_ofnode(id, node, &dev);\n        |-> uclass_get_device_tail(dev, ret, devp);\n            |-> device_probe(dev); // drivers/core/device.c\n                |-> drv->probe(dev);\n                    artinchip_reset_probe(dev);\n                    // drivers/reset/reset-artinchip.c\n'})}),"\n",(0,c.jsx)(n.p,{children:"\u7cfb\u7edf\u7ed9\u6bcf\u4e00\u4e2a\u8bbe\u5907\u7684\u590d\u4f4d\u63a7\u5236\u5668\u5206\u914d\u4e86\u4e00\u4e2a ID\uff0c\u5e76\u4e14\u5728\u8bbe\u5907\u7684 DTS \u914d\u7f6e\u4e2d\u5c06 ID \u5206\u914d\u5230\u5177\u4f53\u7684\u8bbe\u5907\u3002 \u8bbe\u5907\u521d\u59cb\u5316\u65f6\uff0c\u901a\u8fc7 FDT \u7684\u914d\u7f6e\u83b7\u53d6\u76f8\u5e94\u7684\u590d\u4f4d\u63a7\u5236\u8bbe\u5907\u3002"}),"\n",(0,c.jsx)(n.p,{children:"DTS \u4e2d\u590d\u4f4d\u63a7\u5236\u5668\u914d\u7f6e\u793a\u4f8b\uff1a"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:'dma: dma-controller@10000000 {\n    compatible = "artinchip,aic-dma";\n    ...\n    resets = <&rst RESET_DMA>;\n    ...\n};\n'})}),"\n",(0,c.jsx)(n.p,{children:"\u76f8\u5173 ID \u5b9a\u4e49\u53ef\u53c2\u8003\uff1a"}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"include/dt-bindings/reset/artinchip,aic-reset.h"})}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(n.p,{children:"\u83b7\u53d6\u590d\u4f4d\u63a7\u5236\u5668\u7684\u6d41\u7a0b\uff1a"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"reset_get_by_index(dev, index, reset_ctl); // drivers/reset/reset-uclass.c\n|   // \u6b64\u5904 index \u662f DTS \u4e2d\u914d\u7f6e\u7ed9\u8be5\u8bbe\u5907\u7684\u7b2c\u51e0\u4e2a\u590d\u4f4d\u63a7\u5236\u8bbe\u5907\n|\n|-> reset_get_by_index_tail();\n    |-> uclass_get_device_by_ofnode(UCLASS_RESET, args->node, &dev_reset);\n    |-> resetof_xlate_default(reset_ctl, args);\n        |-> reset_ctl->id = args->args[0]; // \u83b7\u53d6\u5230\u5177\u4f53\u7684\u590d\u4f4d\u63a7\u5236\u5668 ID\n"})}),"\n",(0,c.jsxs)(n.p,{children:["\u9700\u8981\u5bf9\u8bbe\u5907\u8fdb\u884c\u590d\u4f4d\u65f6\uff0c\u901a\u8fc7 ",(0,c.jsx)(n.code,{children:"reset_ctl->id"})," \u8fdb\u884c\u8bbf\u95ee\u548c\u8bbe\u7f6e\u786c\u4ef6\u3002"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"reset_assert(reset_ctl); // drivers/reset/reset-uclass.c\n|-> ops->rst_assert(reset_ctl);\n    artinchip_reset_assert(reset_ctrl); // drivers/reset/reset-artinchip.c\n"})}),"\n",(0,c.jsx)(n.h2,{id:"3-dma-\u9a71\u52a8",children:"3. DMA \u9a71\u52a8"}),"\n",(0,c.jsx)(n.p,{children:"\u6b64\u5904\u63cf\u8ff0\u7684 DMA \u662f ArtInChip \u5e73\u53f0\u4e0a\u7684\u7cfb\u7edf DMA\u3002\u4e00\u4e9b\u786c\u4ef6 IP \u5185\u90e8\u81ea\u5e26\u7684 DMA \u4e0d\u5728\u8fd9\u91cc\u63cf\u8ff0\u7684\u8303\u56f4\u3002"}),"\n",(0,c.jsx)(n.h3,{id:"31-\u9a71\u52a8\u6846\u67b6",children:"3.1. \u9a71\u52a8\u6846\u67b6"}),"\n",(0,c.jsx)(n.p,{children:"U-Boot \u9a71\u52a8\u6a21\u578b\u652f\u6301 DMA\uff0cArtInChip \u5e73\u53f0\u4e2d DMA \u9a71\u52a8\u57fa\u4e8e\u8be5\u6846\u67b6\u8fdb\u884c\u5b9e\u73b0\u3002 \u76f8\u5173\u914d\u7f6e\u4e3a\uff1a"}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:"CONFIG_DMA"}),"\n",(0,c.jsx)(n.li,{children:"CONFIG_ARTINCHIP_DMA"}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(n.p,{children:"\u76f8\u5173\u6e90\u7801\u6709\uff1a"}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"include/dma.h"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"drivers/dma/dma-uclass.c"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"drivers/dma/artinchip_dma.c"})}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(n.h3,{id:"32-\u9a71\u52a8\u63a5\u53e3",children:"3.2. \u9a71\u52a8\u63a5\u53e3"}),"\n",(0,c.jsx)(n.p,{children:"\u5e38\u7528\u63a5\u53e3"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"int dma_enable(struct dma *dma);\nint dma_disable(struct dma *dma);\nint dma_request(struct udevice *dev, struct dma *dma);\nint dma_free(struct dma *dma);\nint dma_memcpy(void *dst, void *src, size_t len);\nint dma_prepare_rcv_buf(struct dma *dma, void *dst, size_t size);\nint dma_receive(struct dma *dma, void **dst, void *metadata);\nint dma_send(struct dma *dma, void *src, size_t len, void *metadata);\n"})}),"\n",(0,c.jsx)(n.h3,{id:"33-\u5b9e\u73b0\u8bf4\u660e",children:"3.3. \u5b9e\u73b0\u8bf4\u660e"}),"\n",(0,c.jsx)(n.p,{children:"ArtInChip \u5e73\u53f0\u4e0a\u6709\u4e00\u4e2a\u7cfb\u7edf DMA\uff0c\u5176\u652f\u63018\u4e2a\u901a\u9053\u540c\u65f6\u5de5\u4f5c\u3002\u5982\u89c4\u683c\u4e66\u6240\u5b9a\u4e49\uff0cDMA \u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u786c\u4ef6 IP \u4e4b\u95f4\u642c\u8fd0\u6570\u636e\uff0c\u7cfb\u7edf\u4e3a\u5404\u786c\u4ef6 IP \u5206\u914d\u4e86\u56fa\u5b9a\u7684\u6570\u636e\u7aef\u53e3\u53f7\u3002 \u4f7f\u7528 DMA \u65f6\uff0c\u8f6f\u4ef6\u9700\u8981\u5148\u7533\u8bf7\u5230\u4e00\u4e2a\u7a7a\u95f2\u7684 DMA \u901a\u9053\uff0c\u5e76\u5c06\u6e90\u6570\u636e\u7aef\u53e3\u548c\u76ee\u6807\u6570\u636e\u7aef\u53e3\u7b49\u4fe1\u606f\u914d\u7f6e\u7ed9 DMA \u901a\u9053\uff0c\u7136\u540e\u542f\u52a8 DMA \u8fdb\u884c\u5de5\u4f5c\u3002"}),"\n",(0,c.jsx)(n.p,{children:"\u7136\u800c\u4e0a\u8ff0\u7684\u63cf\u8ff0\u548c\u4f7f\u7528\u65b9\u5f0f\u5e76\u4e0d\u80fd\u76f4\u63a5\u5bf9\u5e94\u5230 DTS \u7684\u914d\u7f6e\u65b9\u5f0f\u4ee5\u53ca U-Boot \u4e2d\u7684 DMA \u8868\u793a\u65b9\u5f0f\uff0c \u4e2d\u95f4\u9700\u8981\u505a\u4e00\u4e9b\u8f6c\u6362\u548c\u8bf4\u660e\u3002"}),"\n",(0,c.jsx)(n.p,{children:"\u5728 DTS \u4e2d\uff0c\u53ef\u4ee5\u63cf\u8ff0\u67d0\u4e2a\u63a7\u5236\u5668\u662f\u5426\u652f\u6301 DMA\uff0c\u5e76\u4e14\u914d\u7f6e\u6240\u4f7f\u7528\u7684 DMA ID \u53f7\u3002 \u5728 ArtInChip \u5e73\u53f0\u4e2d\uff0c\u5b9e\u9645\u53ea\u6709\u4e00\u4e2a DMA\uff0c\u5404\u786c\u4ef6 IP \u5171\u4eab\u4f7f\u7528\u3002\u5728\u914d\u7f6e DTS \u65f6\uff0c \u4f7f\u7528\u8bbe\u5907\u5bf9\u5e94\u7684 DMA \u6570\u636e\u7aef\u53e3\u53f7\u4f5c\u4e3a DMA ID\uff0c\u5728\u8fd0\u884c\u65f6\u518d\u7ed9\u8be5 ID \u5206\u914d\u53ef\u7528\u7684 DMA \u901a\u9053\u3002"}),"\n",(0,c.jsx)(n.p,{children:"\u5982\u4e0b\u9762\u7684\u793a\u4f8b\uff1a"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:'spi0: spi@10400000 {\n    compatible = "artinchip,aic-spi-v1.0";\n    reg = <0x0 0x10400000 0x0 0x1000>;\n    interrupts-extended = <&plic0 44 IRQ_TYPE_LEVEL_HIGH>;\n    clocks = <&cmu CLK_SPI0>;\n    resets = <&rst RESET_SPI0>;\n    dmas = <&dma DMA_SPI0>, <&dma DMA_SPI0>;\n    dma-names = "rx", "tx";\n    #address-cells = <1>;\n    #size-cells = <0>;\n    spi-max-frequency = <24000000>;\n};\n'})}),"\n",(0,c.jsx)(n.p,{children:"\u8fd9\u91cc\u7684 DMA \u914d\u7f6e\u4e2d\uff0c\u63cf\u8ff0\u4e86 SPI0 \u63a7\u5236\u5668\u4f7f\u7528\u4e24\u4e2a DMA\uff0c\u5206\u522b\u662f \u201crx\u201d, \u201ctx\u201d\uff0c\u5b83\u4eec\u7684 DMA ID \u90fd\u662f SPI0 \u5bf9\u5e94\u7684 DMA \u6570\u636e\u7aef\u53e3\u53f7 10\u3002"}),"\n",(0,c.jsx)(n.p,{children:"\u4e0a\u8ff0\u7684\u914d\u7f6e\u5bf9\u5e94\u5230 U-Boot \u7684 DMA \u9a71\u52a8\u5b9e\u73b0\u65f6\uff0c\u4f1a\u6709\u4e00\u4e9b\u95ee\u9898\u3002U-Boot DMA \u5728\u8fd0\u884c\u65f6\u4f7f\u7528\u4e0b\u9762\u7684\u7ed3\u6784\u4f53\u8868\u793a\uff1a"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"struct dma {\n        struct udevice *dev;\n        unsigned long id;\n};\n"})}),"\n",(0,c.jsxs)(n.p,{children:["DMA \u7684\u5b9e\u4f8b\u5316\u5728 DMA \u9a71\u52a8\u6846\u67b6 ",(0,c.jsx)(n.code,{children:"dma-uclass.c"})," \u4e2d\u8fdb\u884c\uff0c\u5176\u4e2d\u7684 ",(0,c.jsx)(n.code,{children:"id"})," \u503c\u5373\u4e3a DTS \u4e2d\u914d\u7f6e\u7684 DMA ID\u3002\u8fd9\u91cc\u4e24\u4e2a DMA \u4f7f\u7528\u4e86\u76f8\u540c\u7684 ID \u53f7\uff0c\u5982\u679c\u76f4\u63a5\u4f7f\u7528\uff0c\u65e0\u6cd5\u533a\u5206\u4e0d\u540c DMA \u6240\u6620\u5c04\u7684 DMA \u901a\u9053\u3002"]}),"\n",(0,c.jsxs)(n.p,{children:["ArtInChip \u5e73\u53f0\u4e0a\u901a\u8fc7\u5bf9 DMA \u7ed3\u6784\u4f53\u4e2d\u7684 ",(0,c.jsx)(n.code,{children:"id"})," \u8fdb\u884c\u4e86\u6269\u5c55\uff0c\u4ee5\u65b9\u4fbf\u533a\u5206\u5b9e\u9645\u4f7f\u7528\u7684\u4e0d\u540c DMA\uff0c \u5982\u4e0b\u6240\u793a\uff1a"]}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:"bit[15:0] \u8868\u793a IP \u7aef\u53e3\u53f7"}),"\n",(0,c.jsx)(n.li,{children:"bit[31:16] \u8868\u793a DMA \u901a\u9053\u53f7"}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(n.p,{children:"\u5728 DMA \u521b\u5efa\u65f6\u8d4b\u503c\u7aef\u53e3\u53f7\u533a\u57df\uff0cDMA request \u65f6\u8d4b\u503c\u901a\u9053\u53f7\u533a\u57df\u3002\u7531\u4e8e\u4e0a\u8ff0\u4e24\u4e2a\u52a8\u4f5c\u662f\u5728\u4e00\u4e2a\u8c03\u7528\u4e2d\u5b8c\u6210\u7684\uff0c \u56e0\u6b64\u4e0d\u4f1a\u6709\u95ee\u9898\uff1a"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:'dma_get_by_name(bus, "tx", &priv->tx_dma); // drivers/dma/dma-uclass.c\n|-> dma_get_by_index(dev, index, dma); // drivers/dma/dma-uclass.c\n    |-> dma_of_xlate_default(dma, &args);\n    |   |-> dma->id = args->args[0];\n    |\n    |-> dma_request(dev_dma, dma); // drivers/dma/dma-uclass.c\n        |-> aic_dma_request(dma); // drivers/dma/artinchip_dma.c\n            |-> phy_ch = aic_dma_phy_request(ud);\n            |-> dma->id |= (phy_ch << AIC_DMA_PHY_CH_OFF);\n'})}),"\n",(0,c.jsxs)(n.p,{children:["U-Boot \u5bf9 ",(0,c.jsx)(n.code,{children:"struct dma"})," \u7ed3\u6784\u4f53\u4e2d ",(0,c.jsx)(n.code,{children:"id"})," \u7684\u5b9a\u4e49\u662f\u552f\u4e00\u6807\u8bc6\uff0c\u53ea\u8981\u80fd\u591f\u505a DMA \u533a\u5206\u5373\u53ef\uff0c \u56e0\u6b64\u4e0a\u8ff0\u6269\u5c55\u4e0d\u4f1a\u9020\u6210\u5176\u4ed6\u95ee\u9898\u3002"]}),"\n",(0,c.jsx)(n.h3,{id:"34-\u521d\u59cb\u5316\u6d41\u7a0b",children:"3.4. \u521d\u59cb\u5316\u6d41\u7a0b"}),"\n",(0,c.jsx)(n.p,{children:"DMA \u9a71\u52a8\u7684\u521d\u59cb\u5316\uff0c\u5728 DMA \u7b2c\u4e00\u6b21\u88ab\u4f7f\u7528\u65f6\u89e6\u53d1\u8fdb\u884c\u3002"}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.strong,{children:"\u60c5\u51b51\uff1a"})," DRAM DMA \u6570\u636e\u4f20\u8f93"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"dma_memcpy(dst_buf, src_buf, len);// drivers/dma/dma-uclass.c\n|-> dma_get_device(DMA_SUPPORTS_MEM_TO_MEM, &dev);\n    |-> uclass_first_device(UCLASS_DMA, &dev)\n        |-> uclass_find_first_device(id, index, &dev);\n        |-> uclass_get_device_tail(dev, ret, devp);\n            |-> device_probe(dev); // drivers/core/device.c\n                |-> drv->probe(dev);\n                    aic_dma_probe(dev); // drivers/dma/artinchip_dma.c\n"})}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.strong,{children:"\u60c5\u51b52\uff1a"})," \u6839\u636e DTS \u914d\u7f6e\u7533\u8bf7 DMA"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:'dma_get_by_name(bus, "tx", &priv->tx_dma); // drivers/dma/dma-uclass.c\n|-> dma_get_by_index(dev, index, dma); // drivers/dma/dma-uclass.c\n    |-> uclass_get_device_by_ofnode(UCLASS_DMA, args.node, &dev_dma);\n        |   // drivers/core/uclass.c\n        |-> uclass_find_device_by_ofnode(id, node, &dev);\n        |-> uclass_get_device_tail(dev, ret, devp);\n            |-> device_probe(dev); // drivers/core/device.c\n                |-> drv->probe(dev);\n                    aic_dma_probe(dev); // drivers/dma/artinchip_dma.c\n'})}),"\n",(0,c.jsx)(n.h2,{id:"4-spi-\u9a71\u52a8",children:"4. SPI \u9a71\u52a8"}),"\n",(0,c.jsx)(n.p,{children:"SPI \u5728 U-Boot \u4e2d\u4e3b\u8981\u7528\u4e8e\u652f\u6301 SPI NAND/NOR \u5b58\u50a8\u8bbe\u5907\u3002\u76ee\u524d ArtInChip \u5e73\u53f0\u4e0a SPI \u7684\u5b9e\u73b0\u53ea\u652f\u6301\u534a\u53cc\u5de5\u6a21\u5f0f(Half-duplex)\u3002"}),"\n",(0,c.jsx)(n.h3,{id:"41-\u9a71\u52a8\u6846\u67b6",children:"4.1. \u9a71\u52a8\u6846\u67b6"}),"\n",(0,c.jsx)(n.p,{children:"U-Boot \u9a71\u52a8\u6a21\u578b\u652f\u6301 SPI\uff0cArtInChip \u5e73\u53f0\u4e2d SPI \u9a71\u52a8\u57fa\u4e8e\u8be5\u6846\u67b6\u8fdb\u884c\u5b9e\u73b0\u3002 \u76f8\u5173\u914d\u7f6e\u4e3a\uff1a"}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:"CONFIG_DM_SPI"}),"\n",(0,c.jsx)(n.li,{children:"CONFIG_SPI"}),"\n",(0,c.jsx)(n.li,{children:"CONFIG_SPL_SPI_SUPPORT"}),"\n",(0,c.jsx)(n.li,{children:"CONFIG_ARTINCHIP_SPI"}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(n.p,{children:"\u76f8\u5173\u6e90\u7801\u6709\uff1a"}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"drivers/spi/spi-uclass.c"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"include/spi.h"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"drivers/spi/artinchip_spi.c"})}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(n.h3,{id:"42-\u9a71\u52a8\u63a5\u53e3",children:"4.2. \u9a71\u52a8\u63a5\u53e3"}),"\n",(0,c.jsx)(n.p,{children:"\u5e38\u7528\u63a5\u53e3\uff1a"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"int dm_spi_claim_bus(struct udevice *dev);\nvoid dm_spi_release_bus(struct udevice *dev);\nint dm_spi_xfer(struct udevice *dev, unsigned int bitlen,\n                const void *dout, void *din, unsigned long flags);\nint spi_claim_bus(struct spi_slave *slave);\nvoid spi_release_bus(struct spi_slave *slave);\nint  spi_xfer(struct spi_slave *slave, unsigned int bitlen, const void *dout,\n              void *din, unsigned long flags);\n"})}),"\n",(0,c.jsx)(n.h3,{id:"43-\u521d\u59cb\u5316\u6d41\u7a0b",children:"4.3. \u521d\u59cb\u5316\u6d41\u7a0b"}),"\n",(0,c.jsx)(n.p,{children:"SPI \u8bbe\u5907\u6302\u8f7d\u5728 SPI \u603b\u7ebf\u4e0a\uff0c\u5f53 SPI \u8bbe\u5907\u521d\u59cb\u5316\u65f6\uff0c\u5982\u679c\u7236\u8bbe\u5907\u8fd8\u6ca1\u6709\u88ab\u521d\u59cb\u5316\uff0c \u5219\u4f1a\u81ea\u52a8\u89e6\u53d1\u7236\u8bbe\u5907\u7684\u521d\u59cb\u5316\u3002\u4e0b\u9762\u662f SPI NAND \u521d\u59cb\u5316\u65f6\u89e6\u53d1 SPI \u521d\u59cb\u5316\u7684\u6d41\u7a0b\u3002"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"mtd_probe(dev)\n|-> device_probe(dev)\n    |   // \u6b64\u65f6 SPI \u8fd8\u6ca1\u6709 probe\uff0c\u5219\u5148 probe SPI\n    |-> device_probe(dev->parent); // drivers/core/device.c\n    |   |-> drv->probe(dev);\n    |       aic_spi_probe(dev); // drivers/spi/artinchip_spi.c\n    |\n    |-> drv->probe(dev);\n        spinand_probe(dev) // drivers/mtd/nand/spi/core.c\n"})}),"\n",(0,c.jsx)(n.h3,{id:"44-dma-\u7684\u652f\u6301",children:"4.4. DMA \u7684\u652f\u6301"}),"\n",(0,c.jsxs)(n.p,{children:["ArtInChip SPI \u9a71\u52a8\u652f\u6301\u4f7f\u7528 DMA \u6536\u53d1\u6570\u636e\u548c\u4f7f\u7528 FIFO \u901a\u8fc7 CPU \u8bfb\u5199\u7684\u65b9\u5f0f\u6536\u53d1\u6570\u636e\uff0c \u5728 DMA \u4f7f\u80fd\u7684\u60c5\u51b5\u4e0b\uff0c\u5bf9\u4e8e\u6570\u636e\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e ",(0,c.jsx)(n.code,{children:"SPI_FIFO_DEPTH"})," \u7684\u4f20\u8f93\uff0c\u9a71\u52a8\u81ea\u52a8\u5207\u6362\u4f7f\u7528 DMA \u8fdb\u884c\u4f20\u8f93\uff0c\u5426\u5219\u9ed8\u8ba4\u4f7f\u7528 FIFO \u6a21\u5f0f\u3002"]}),"\n",(0,c.jsx)(n.p,{children:"\u5982\u679c\u7cfb\u7edf\u6ca1\u6709\u4f7f\u80fd DMA\uff0c\u5219\u6240\u6709\u4f20\u8f93\u90fd\u4f7f\u7528 FIFO \u6a21\u5f0f\u3002"}),"\n",(0,c.jsx)(n.p,{children:"\u4f7f\u80fd DMA \u7684 Kconfig \u914d\u7f6e\u4e3a\uff1a"}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:"CONFIG_ARTINCHIP_DMA"}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(n.h3,{id:"45-quad-spi-\u7684\u652f\u6301",children:"4.5. QUAD SPI \u7684\u652f\u6301"}),"\n",(0,c.jsxs)(n.p,{children:["\u5bf9\u4e8e\u975e\u5b58\u50a8 SPI \u8bbe\u5907\uff0cSPI \u9a71\u52a8\u53ea\u652f\u6301\u6807\u51c6 SPI \u6a21\u5f0f\uff0c\u5373 Single Mode\uff0c\u6570\u636e\u4f20\u8f93\u90fd\u4f7f\u7528\u4e00\u6839\u7ebf\u8fdb\u884c(MOSI \u548c MISO)\u3002 \u5bf9\u4e8e SPI \u5b58\u50a8\u8bbe\u5907(SPI NAND/SPI NOR)\uff0c\u901a\u8fc7\u5bf9\u63a5 ",(0,c.jsx)(n.code,{children:"spi-mem"})," \u6846\u67b6\uff0c\u53ef\u4ee5\u652f\u6301 DUAL SPI \u548c QUAD SPI\u3002"]}),"\n",(0,c.jsx)(n.p,{children:"\u76f8\u5173\u4ee3\u7801\uff1a"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"static const struct spi_controller_mem_ops aic_spi_mem_ops = {\n    .supports_op = aic_spi_mem_supports_op,\n    .exec_op = aic_spi_mem_exec_op,\n};\nstatic const struct dm_spi_ops aic_spi_ops = {\n    .claim_bus   = aic_spi_claim_bus,\n    .release_bus = aic_spi_release_bus,\n    .xfer        = aic_spi_xfer,\n    .set_speed   = aic_spi_set_speed,\n    .set_mode    = aic_spi_set_mode,\n    .mem_ops     = &aic_spi_mem_ops,\n};\n"})}),"\n",(0,c.jsxs)(n.p,{children:["\u901a\u8fc7\u8bbe\u7f6e ",(0,c.jsx)(n.code,{children:".exec_op"})," \uff0cSPI MEM \u8bbe\u5907\u7684\u6240\u6709\u64cd\u4f5c\u90fd\u7531 ",(0,c.jsx)(n.code,{children:"aic_spi_mem_exec_op"})," \u8fdb\u884c\u5904\u7406\u3002 \u7531\u4e8e\u8be5\u63a5\u53e3\u53ef\u4ee5\u83b7\u53d6\u5230 SPI \u64cd\u4f5c\u7684\u6570\u636e\u4f4d\u5bbd\u7b49\u8be6\u7ec6\u4fe1\u606f\uff0c\u9a71\u52a8\u53ef\u4ee5\u4e3a\u6bcf\u4e00\u4e2a\u4f20\u8f93\u64cd\u4f5c\u8bbe\u7f6e\u51c6\u786e\u7684\u6a21\u5f0f(Single/Dual/Quad)\u3002"]}),"\n",(0,c.jsx)(n.h2,{id:"5-spi-nand-\u9a71\u52a8",children:"5. SPI NAND \u9a71\u52a8"}),"\n",(0,c.jsx)(n.p,{children:"\u672c\u7ae0\u8282\u63cf\u8ff0 SPI NAND \u9a71\u52a8\u7684\u76f8\u5173\u914d\u7f6e\u548c\u4f7f\u7528\u3002"}),"\n",(0,c.jsx)(n.h3,{id:"51-\u9a71\u52a8\u6846\u67b6",children:"5.1. \u9a71\u52a8\u6846\u67b6"}),"\n",(0,c.jsx)(n.p,{children:"SPI NAND \u7684\u64cd\u4f5c\u57fa\u4e8e SPI \u547d\u4ee4\uff0c\u9664\u4e86\u4e2a\u522b\u578b\u53f7\u53ef\u80fd\u6709\u4e0d\u540c\u4e4b\u5916\uff0c\u57fa\u672c\u4e0a\u64cd\u4f5c\u548c\u884c\u4e3a\u90fd\u662f\u4e00\u81f4\u7684\uff0c \u6240\u4ee5 U-Boot \u4e2d\u5df2\u7ecf\u5b9e\u73b0\u4e86\u5171\u7528\u7248\u672c\u7684 SPI NAND \u9a71\u52a8\uff0c\u5177\u4f53\u5668\u4ef6\u53ea\u9700\u8981\u6dfb\u52a0\u5c0f\u90e8\u5206\u9a71\u52a8\u4ee3\u7801\u5373\u53ef\u3002"}),"\n",(0,c.jsx)(n.p,{children:"\u76f8\u5173\u914d\u7f6e\uff1a"}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:"CONFIG_MTD"}),"\n",(0,c.jsx)(n.li,{children:"CONFIG_DM_SPI"}),"\n",(0,c.jsx)(n.li,{children:"CONFIG_SPI_MEM"}),"\n",(0,c.jsx)(n.li,{children:"CONFIG_MTD_SPI_NAND"}),"\n",(0,c.jsx)(n.li,{children:"CONFIG_SPL_SPI_NAND_ARTINCHIP"}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(n.p,{children:"\u5177\u4f53\u6e90\u7801\u5728\uff1a"}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"drivers/mtd/nand/spi/"})}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(n.h3,{id:"52-\u9a71\u52a8\u63a5\u53e3",children:"5.2. \u9a71\u52a8\u63a5\u53e3"}),"\n",(0,c.jsx)(n.p,{children:"SPI NAND \u5c5e\u4e8e MTD \u8bbe\u5907\uff0c\u4f7f\u7528 MTD \u76f8\u5173\u63a5\u53e3\u3002\u5177\u4f53\u53c2\u8003\uff1a"}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"include/linux/mtd/mtd.h"})}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(n.h3,{id:"53-\u521d\u59cb\u5316\u548c\u8bfb\u5199",children:"5.3. \u521d\u59cb\u5316\u548c\u8bfb\u5199"}),"\n",(0,c.jsxs)(n.p,{children:["SPI NAND \u662f\u6302\u8f7d\u5728 SPI \u603b\u7ebf\u4e0a\u7684 MTD \u8bbe\u5907\uff0c\u521d\u59cb\u5316 probe \u5728 MTD \u8bbe\u5907\u7b2c\u4e00\u6b21\u88ab\u4f7f\u7528\u65f6\u89e6\u53d1\u3002 \u8c03\u7528 ",(0,c.jsx)(n.code,{children:"mtd_probe_devices()"})," \u662f\u5bf9 MTD \u8bbe\u5907\u9a71\u52a8\u521d\u59cb\u5316\u7684\u5e38\u7528\u65b9\u5f0f\u3002"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"mtd_probe_devices(void)\n|-> mtd_probe_uclass_mtd_devs(void) // drivers/mtd/mtd_uboot.c\n    |   // \u901a\u8fc7 while \u5faa\u73af\uff0c\u9010\u4e2a UCLASS_MTD \u8bbe\u5907 find\n    |-> uclass_find_device(UCLASS_MTD, idx, &dev)\n    |-> mtd_probe(dev)\n        |-> device_probe(dev)\n            |-> spinand_probe(dev) // drivers/mtd/nand/spi/core.c\n                |   // spinand = dev_get_priv(dev);\n                |   // slave = dev_get_parent_priv(dev);\n                |   // mtd = dev_get_uclass_priv(dev);\n                |   // nand = &spinand->base;\n                |   //\n                |   // spinand->slave = slave;\n                |\n                |-> spinand_init(spinand);\n                |   |-> spinand_detect(spinand);\n                |   |   |-> spinand_manufacturer_detect(spinand);\n                |   |       |                 // drivers/mtd/nand/spi/core.c\n                |   |       |-> spinand_manufacturers[i]->ops->detect(spinand);\n                |   |           // \u5c1d\u8bd5\u5382\u5546\u7684 detect \u51fd\u6570\n                |   |\n                |   |-> spinand_manufacturer_init(spinand);\n                |   |-> nanddev_init(nand, &spinand_ops, THIS_MODULE);\n                |   |   |                         // drivers/mtd/nand/core.c\n                |   |   |   // mtd->type = memorg->bits_per_cell == 1 ?\n                |   |   |   //          MTD_NANDFLASH : MTD_MLCNANDFLASH;\n                |   |   |\n                |   |   |-> nanddev_bbt_init(nand) // drivers/mtd/nand/bbt.c\n                |   |       // \u6b64\u5904\u4ec5\u7533\u8bf7\u6807\u8bb0\u574f\u5757\u7684 Cache \u7a7a\u95f4\uff0c\u4e0d\u505a\u574f\u5757\u68c0\u67e5\n                |   |\n                |   |-> // mtd = spinand->base.mtd\n                |       //\n                |       // mtd->_read_oob = spinand_mtd_read;\n                |       // mtd->_write_oob = spinand_mtd_write;\n                |       // mtd->_block_isbad = spinand_mtd_block_isbad;\n                |       // mtd->_block_markbad = spinand_mtd_block_markbad;\n                |       // mtd->_block_isreserved = spinand_mtd_block_isreserved;\n                |       // mtd->_erase = spinand_mtd_erase;\n                |       //\n                |       // \u6b64\u5904\u5b8c\u6210 mtd \u7684\u521d\u59cb\u5316\n                |\n                |-> add_mtd_device(mtd);\n                    |-> idr_alloc(&mtd_idr, mtd, 0, 0, GFP_KERNEL);\n                            // \u6dfb\u52a0\u5230 mtd_idr \u5217\u8868\u4e2d\n"})}),"\n",(0,c.jsx)(n.p,{children:"NAND \u5b58\u50a8\u8bbe\u5907\u5728\u8bbf\u95ee\u524d\uff0c\u901a\u5e38\u8981\u505a\u4e00\u6b21\u574f\u5757\u68c0\u67e5\u3002U-Boot \u4e2d\u5728\u6dfb\u52a0\u5206\u533a\u7684\u65f6\u5019\u8fdb\u884c\u68c0\u67e5\u574f\u5757\uff1a"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"do_mtd_list();  // cmd/mtd.c\n|-> mtd_probe_devices(); // drivers/mtd/mtd_uboot.c\n    |-> add_mtd_partitions(); // drivers/mtd/mtdpart.c\n        |-> allocate_partition(); // drivers/mtd/mtdpart.c\n        |   |   // \u8fd9\u91cc\u505a\u574f\u5757\u7edf\u8ba1\n        |   |-> mtd_block_isbad(); // drivers/mtd/mtdcore.c\n        |       |-> mtd->_block_isbad(mtd, ofs);\n        |           spinand_mtd_block_isbad(); // drivers/mtd/nand/spi/core.c\n        |           |-> nanddev_isbad(); // drivers/mtd/nand/core.c\n        |               |-> spinand_isbad(); // drivers/mtd/nand/spi/core.c\n        |                   |-> spinand_read_page();\n        |\n        |-> add_mtd_device(slave); // drivers/mtd/mtdcore.c\n"})}),"\n",(0,c.jsxs)(n.p,{children:["\u4e0a\u5c42\u5e94\u7528\uff0c\u5982 mtd \u547d\u4ee4\u548c UBI\uff0c\u901a\u8fc7 ",(0,c.jsx)(n.code,{children:"mtd_read"})," / ",(0,c.jsx)(n.code,{children:"mtd_write"})," API \u8fdb\u884c\u8bfb\u5199\u7b49\u64cd\u4f5c\u3002"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"mtd_read\n|-> mtd->_read_oob(mtd, from, &ops);\n    part_read_oob(mtd, from, &ops); // drivers/mtd/mtdpart.c\n    |-> mtd->parent->_read_oob(mtd->parent, from + mtd->offset, ops);\n        spinand_mtd_read(mtd, from, &ops); // drivers/mtd/nand/spi/core.c\n        |-> spinand_read_page(spinand, &iter.req, enable_ecc);\n            |-> spinand_load_page_op(spinand, req);\n            |   |-> spi_mem_exec_op(spinand->slave, &op); // drivers/spi/spi-mem.c\n            |       |-> ops->mem_ops->exec_op(slave, op);\n            |           aic_spi_mem_exec_op(slave, op);\n            |           // drivers/spi/artinchip_spi.c\n            |\n            |-> spinand_read_from_cache_op(spinand, req);\n                |-> spi_mem_exec_op(spinand->slave, &op);\n                    |-> ops->mem_ops->exec_op(slave, op);\n                        aic_spi_mem_exec_op(slave, op);\n                        // drivers/spi/artinchip_spi.c\nmtd_write\n|-> mtd->_write_oob(mtd, to, &ops);\n    part_write_oob(mtd, to, &ops); // drivers/mtd/mtdpart.c\n    |-> mtd->parent->_write_oob(mtd->parent, to + mtd->offset, ops);\n        spinand_mtd_write(mtd, to, &ops);\n        |-> spinand_write_page(spinand, &iter.req);\n            |-> spinand_write_enable_op(spinand);\n            |-> spinand_write_to_cache_op(spinand, req);\n            |-> spinand_program_op(spinand, req);\n                |-> spi_mem_exec_op(spinand->slave, &op); // drivers/spi/spi-mem.c\n                    |-> ops->mem_ops->exec_op(slave, op);\n                        aic_spi_mem_exec_op(slave, op);\n                        // drivers/spi/artinchip_spi.c\n"})}),"\n",(0,c.jsx)(n.h3,{id:"54-\u6dfb\u52a0\u65b0\u5668\u4ef6",children:"5.4. \u6dfb\u52a0\u65b0\u5668\u4ef6"}),"\n",(0,c.jsx)(n.p,{children:"U-Boot \u7684\u4ee3\u7801\u4ec5\u914d\u7f6e\u4e86\u6570\u91cf\u6709\u9650\u7684 SPI NAND \u5668\u4ef6\uff0c\u5728\u4f7f\u7528\u65b0\u5668\u4ef6\u65f6\uff0c\u9700\u8981\u5728\u4ee3\u7801\u4e2d\u589e\u52a0\u5bf9\u65b0\u5668\u4ef6\u7684\u652f\u6301\u3002 \u7531\u4e8e\u53ea\u9700\u914d\u7f6e\u6709\u9650\u7684\u4fe1\u606f\uff0c\u5e76\u4e14\u5177\u4f53\u7684\u914d\u7f6e\u5df2\u7ecf\u6a21\u677f\u5316\uff0c\u56e0\u6b64\u53ea\u9700\u53c2\u7167\u73b0\u6709\u4ee3\u7801\u6dfb\u52a0\u5373\u53ef\u3002"}),"\n",(0,c.jsx)(n.p,{children:"\u5177\u4f53\u6d41\u7a0b\u5982\u4e0b\uff1a"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:["\n",(0,c.jsx)(n.p,{children:"\u68c0\u67e5\u8be5\u5668\u4ef6\u7684\u5382\u5546\u662f\u5426\u5728\u652f\u6301\u5217\u8868"}),"\n",(0,c.jsxs)(n.p,{children:["\u67e5\u770b ",(0,c.jsx)(n.code,{children:"drivers/mtd/nand/spi/"})," \u6e90\u7801\u76ee\u5f55\u662f\u5426\u6709\u8be5\u5668\u4ef6\u5382\u5546\u7684\u9a71\u52a8\u3002\u5982"]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.code,{children:"winbond.c"})}),"\n",(0,c.jsx)(n.p,{children:"\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u9700\u8981\u6dfb\u52a0\u65b0\u5382\u5546\u652f\u6301\u3002"}),"\n"]}),"\n",(0,c.jsxs)(n.li,{children:["\n",(0,c.jsx)(n.p,{children:"\u6dfb\u52a0\u65b0\u5382\u5546\u652f\u6301\u4e4b\u540e\uff0c\u9700\u8981\u5c06\u5c06\u8be5\u5382\u5546\u7684\u914d\u7f6e\u6dfb\u52a0\u5230\u7cfb\u7edf\u4e2d"}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.code,{children:"drivers/mtd/nand/spi/core.c"})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.code,{children:"struct spinand_manufacturer *spinand_manufacturers[]"})}),"\n"]}),"\n",(0,c.jsxs)(n.li,{children:["\n",(0,c.jsx)(n.p,{children:"\u68c0\u67e5\u5382\u5546\u9a71\u52a8\u4e2d\u662f\u5426\u652f\u6301\u8be5\u5668\u4ef6"}),"\n",(0,c.jsxs)(n.p,{children:["\u5982 ",(0,c.jsx)(n.code,{children:"winbond.c"})," \u4e2d"]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.code,{children:"struct spinand_info winbond_spinand_table[]"})}),"\n",(0,c.jsx)(n.p,{children:"\u5982\u679c\u6ca1\u6709\uff0c\u5219\u6dfb\u52a0\u65b0\u5668\u4ef6\u5230\u5217\u8868\u4e2d\u5373\u53ef\u3002"}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(n.h2,{id:"6-spi-nor-\u9a71\u52a8",children:"6. SPI NOR \u9a71\u52a8"}),"\n",(0,c.jsx)(n.p,{children:"\u672c\u7ae0\u8282\u63cf\u8ff0 SPI NOR \u9a71\u52a8\u7684\u76f8\u5173\u914d\u7f6e\u548c\u4f7f\u7528\u3002"}),"\n",(0,c.jsx)(n.h3,{id:"61-\u9a71\u52a8\u6846\u67b6",children:"6.1. \u9a71\u52a8\u6846\u67b6"}),"\n",(0,c.jsx)(n.p,{children:"\u5f85\u5b8c\u5584"}),"\n",(0,c.jsx)(n.h3,{id:"62-\u9a71\u52a8\u63a5\u53e3",children:"6.2. \u9a71\u52a8\u63a5\u53e3"}),"\n",(0,c.jsx)(n.p,{children:"\u5f85\u5b8c\u5584"}),"\n",(0,c.jsx)(n.h3,{id:"63-\u521d\u59cb\u5316\u548c\u8bfb\u5199",children:"6.3. \u521d\u59cb\u5316\u548c\u8bfb\u5199"}),"\n",(0,c.jsx)(n.p,{children:"\u5f85\u5b8c\u5584"}),"\n",(0,c.jsx)(n.h3,{id:"64-\u6dfb\u52a0\u65b0\u5668\u4ef6",children:"6.4. \u6dfb\u52a0\u65b0\u5668\u4ef6"}),"\n",(0,c.jsx)(n.p,{children:"\u5f85\u5b8c\u5584"}),"\n",(0,c.jsx)(n.h2,{id:"7-mmc-\u9a71\u52a8",children:"7. MMC \u9a71\u52a8"}),"\n",(0,c.jsx)(n.p,{children:"\u672c\u7ae0\u8282\u63cf\u8ff0 MMC \u9a71\u52a8\u7684\u76f8\u5173\u914d\u7f6e\u548c\u4f7f\u7528\u3002"}),"\n",(0,c.jsx)(n.h3,{id:"71-\u9a71\u52a8\u6846\u67b6",children:"7.1. \u9a71\u52a8\u6846\u67b6"}),"\n",(0,c.jsx)(n.p,{children:"U-Boot \u9a71\u52a8\u6a21\u578b\u652f\u6301 MMC\uff0c\u5e76\u4e14\u901a\u8fc7\u5757\u8bbe\u5907\u63a5\u53e3\u5bf9 MMC \u8fdb\u884c\u8bbf\u95ee\u3002ArtInChip \u5e73\u53f0\u4e2d\uff0c SPL \u548c U-Boot \u9636\u6bb5\u90fd\u652f\u6301 MMC \u5df2\u7ecf\u5757\u8bbe\u5907\u63a5\u53e3\u3002 \u76f8\u5173\u914d\u7f6e\u4e3a\uff1a"}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:"CONFIG_MMC"}),"\n",(0,c.jsx)(n.li,{children:"CONFIG_DM_MMC"}),"\n",(0,c.jsx)(n.li,{children:"CONFIG_SPL_DM_MMC"}),"\n",(0,c.jsx)(n.li,{children:"CONFIG_BLK"}),"\n",(0,c.jsx)(n.li,{children:"CONFIG_SPL_BLK"}),"\n",(0,c.jsx)(n.li,{children:"CONFIG_MMC_ARTINCHIP"}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(n.p,{children:"\u76f8\u5173\u6e90\u7801\u6709\uff1a"}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"include/mmc.h"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"include/blk.h"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"drivers/block/blk-uclass.c"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"drivers/mmc/mmc-uclass.c"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.code,{children:"drivers/mmc/artinchip_mmc.c"})}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(n.h3,{id:"72-\u9a71\u52a8\u63a5\u53e3",children:"7.2. \u9a71\u52a8\u63a5\u53e3"}),"\n",(0,c.jsx)(n.p,{children:"\u5e38\u7528\u9a71\u52a8\u63a5\u53e3\uff1a"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"unsigned long blk_dread(struct blk_desc *block_dev, lbaint_t start,\n            lbaint_t blkcnt, void *buffer);\nunsigned long blk_dwrite(struct blk_desc *block_dev, lbaint_t start,\n             lbaint_t blkcnt, const void *buffer);\nunsigned long blk_derase(struct blk_desc *block_dev, lbaint_t start,\n             lbaint_t blkcnt);\n\nstruct mmc *mmc_create(const struct mmc_config *cfg, void *priv);\nint mmc_bind(struct udevice *dev, struct mmc *mmc,\n         const struct mmc_config *cfg);\nvoid mmc_destroy(struct mmc *mmc);\nint mmc_unbind(struct udevice *dev);\nint mmc_initialize(bd_t *bis);\nint mmc_init(struct mmc *mmc);\nint mmc_send_tuning(struct mmc *mmc, u32 opcode, int *cmd_error);\nint mmc_of_parse(struct udevice *dev, struct mmc_config *cfg);\nint mmc_read(struct mmc *mmc, u64 src, uchar *dst, int size);\nint mmc_set_clock(struct mmc *mmc, uint clock, bool disable);\n"})}),"\n",(0,c.jsx)(n.h3,{id:"73-\u521d\u59cb\u5316\u548c\u4f7f\u7528",children:"7.3. \u521d\u59cb\u5316\u548c\u4f7f\u7528"}),"\n",(0,c.jsx)(n.p,{children:"\u672c\u7ae0\u8282\u4e3b\u8981\u4ecb\u7ecd MMC \u4ee5\u53ca\u5bf9\u5e94\u7684 BLK \u8bbe\u5907\u7684\u521d\u59cb\u5316\u6d41\u7a0b\uff0c\u4ee5\u53ca\u8bfb\u5199\u6d41\u7a0b\u3002"}),"\n",(0,c.jsx)(n.h4,{id:"731-\u7ed1\u5b9a\u9636\u6bb5",children:"7.3.1. \u7ed1\u5b9a\u9636\u6bb5"}),"\n",(0,c.jsxs)(n.p,{children:["\u4f7f\u7528\u65f6\uff0cMMC \u8bbe\u5907\u901a\u8fc7 BLK \u5757\u8bbe\u5907\u63a5\u53e3\u8fdb\u884c\u4f7f\u7528\u3002MMC \u8bbe\u5907\u4e0e BLK \u8bbe\u5907\u4e4b\u95f4\u7684\u5173\u7cfb\u5982 ",(0,c.jsx)(n.a,{href:"#ref-mmc-blk",children:"\u56fe 3.4"})," \u6240\u793a\u3002"]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.img,{src:"https://photos.100ask.net/artinchip-docs/d213-devkit/mmc_relation-17066883824881.png",alt:"../../../_https://photos.100ask.net/artinchip-docs/d213-devkit/mmc_relation.png"})}),"\n",(0,c.jsxs)(n.p,{children:["\u56fe 3.4 ",(0,c.jsx)(n.em,{children:"MMC \u4e0e BLK \u8bbe\u5907\u7684\u5173\u7cfb"})]}),"\n",(0,c.jsxs)(n.p,{children:["\u5bf9\u4e8e\u6bcf\u4e00\u4e2a MMC \u8bbe\u5907\uff0c\u5728\u7ed1\u5b9a\u9636\u6bb5\uff0c\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u5bf9\u5e94\u7684 MMC_BLK \u5757\u8bbe\u5907\uff0c\u5e76\u4e14 MMC_BLK \u8bbe\u5907\u7684 ",(0,c.jsx)(n.code,{children:"parent"})," \u6307\u5411\u5f53\u524d MMC \u8bbe\u5907\u3002 ArtInChip MMC \u8bbe\u5907\u7ed1\u5b9a\u5bf9\u5e94\u7684 MMC \u8bbe\u5907\u9a71\u52a8\uff0c MMC_BLK \u8bbe\u5907\u7ed1\u5b9a ",(0,c.jsx)(n.code,{children:"mmc-uclass"})," \u4e2d\u7684 ",(0,c.jsx)(n.code,{children:"mmc_blk"})," \u9a71\u52a8\u3002"]}),"\n",(0,c.jsxs)(n.p,{children:["\u8bfb\u5199\u64cd\u4f5c\u65f6\uff0c\u901a\u8fc7 ",(0,c.jsx)(n.code,{children:"mmc_blk"})," \u9a71\u52a8\u7684\u8bfb\u5199\u51fd\u6570\uff0c\u8f6c\u4e3a\u5bf9 mmc \u7684\u64cd\u4f5c\u3002"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"static const struct blk_ops mmc_blk_ops = { // drivers/mmc/mmc-uclass.c\n    .read   = mmc_bread,\n#if CONFIG_IS_ENABLED(MMC_WRITE)\n    .write  = mmc_bwrite,\n    .erase  = mmc_berase,\n#endif\n    .select_hwpart  = mmc_select_hwpart,\n};\n"})}),"\n",(0,c.jsx)(n.p,{children:"\u4e0b\u9762\u7684\u7ed1\u5b9a\u6d41\u7a0b\u6f14\u793a\u4e86\u521b\u5efa MMC_BLK \u8bbe\u5907\uff0c\u5e76\u4e14\u8fdb\u884c\u5173\u8054\u7684\u8fc7\u7a0b\u3002"}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"\u4f7f\u7528 PLATDATA \u65f6"})}),"\n",(0,c.jsx)(n.p,{children:"\u5728 SPL \u4e2d\uff0c\u4f7f\u80fd PLATDATA \u65f6\u7684\u7ed1\u5b9a\u6d41\u7a0b\u5982\u4e0b\u3002"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:'reset // arch/arm/cpu/armv7/start.S\n|-> _main   // arch/arm/lib/crt0.S\n    |-> board_init_f(); // arch/arm/mach-artinchip/spl.c\n        |-> spl_early_init() // common/spl/spl.c\n            |-> spl_common_init(setup_malloc = true) // common/spl/spl.c\n                |-> dm_init_and_scan(!CONFIG_IS_ENABLED(OF_PLATDATA));\n                    |-> dm_scan_platdata(pre_reloc_only=false)\n                        |-> lists_bind_drivers();\n                            |-> device_bind_by_name(parent, false, entry, &dev);\n                                |-> drv = lists_driver_lookup_name(info->name);\n                                |   // \u641c\u7d22 U_BOOT_DRIVER(name) \u58f0\u660e\u7684 driver\n                                |-> device_bind_common(); // drivers/core/device.c\n                                    |-> uclass_get(&uc);\n                                    |-> uclass_bind_device(dev);\n                                    |-> drv->bind(dev);\n                                        aic_dwmmc_bind(dev);\n                                            |\n         +----------------------------------+\n         |\naic_dwmmc_bind(dev); // drivers/mmc/artinchip_dw_mmc.c\n|-> dwmci_bind(dev, ...); // drivers/mmc/dw_mmc.c\n    |\n    |-> mmc_bind(dev, &plat->mmc, &plat->cfg) // drivers/mmc/mmc-uclass.c\n        |  // \u7ed1\u5b9a\u4e00\u4e2a IF_TYPE_MMC \u7684 Block \u5b50\u8bbe\u5907\uff0c\u8fd9\u6837\u53ef\u4ee5\u901a\u8fc7\u5757\u8bbe\u5907\u7684\u63a5\u53e3\n        |  // \u4f7f\u7528 MMC\u3002\n        |\n        |-> blk_create_devicef(dev, "mmc_blk", "blk",IF_TYPE_MMC, devnum,\n        |   |                   512, 0, &bdev); // drivers/block/blk-uclass.c\n        |   |-> blk_create_device(parent, "mmc_blk", dev_name, if_type,\n        |       |                 devnum, blksz, lba, devp);\n        |       |-> device_bind_driver(parent, drv_name, name, &dev);\n        |           |   // drivers/core/lists.c\n        |           |-> ....\n        |               |-> device_bind_common(dm_root, ...);\n        |                   |-> uclass_get(drv->id, &uc); id = UCLASS_BLK\n        |                   |-> dev = calloc(1, sizeof(struct udevice));\n        |                   |   dev->name = name // \u5757\u8bbe\u5907\u540d\u5b57\n        |                   |   dev->parent = parent // \u6307\u5411 MMC \u8bbe\u5907\n        |                   |   dev->driver = drv // "mmc_blk" driver\n        |                   |   dev->uclass = uc // UCLASS_BLK\n        |                   |   // \u521b\u5efa\u8bbe\u5907 mmc_blk\n        |                   |\n        |                   |-> uclass_bind_device(dev);\n        |                       // \u5c06\u8bbe\u5907\u6dfb\u52a0\u5230 UCLASS_BLK \u5217\u8868\u4e2d\n        |\n        |-> dev_get_uclass_platdata(bdev);\n'})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"\u4f7f\u7528 DTS \u65f6"})}),"\n",(0,c.jsxs)(n.p,{children:["\u4f7f\u7528 DTS \u65f6\uff0cSPL \u548c U-Boot \u4e2d\u7684\u7ed1\u5b9a\u6d41\u7a0b\u5982\u4e0b\u3002\u5728 DTS \u4e2d\uff0cMMC \u63a7\u5236\u5668\u662f ",(0,c.jsx)(n.code,{children:"soc"})," \u7684\u5b50\u8282\u70b9\uff0c \u6302\u8f7d\u5230 ",(0,c.jsx)(n.code,{children:"simple-bus"})," \u4e2d\uff0c\u56e0\u6b64\u76f8\u5173\u7ed1\u5b9a\u5728 ",(0,c.jsx)(n.code,{children:"soc"})," \u8bbe\u5907\u7ed1\u5b9a ",(0,c.jsx)(n.code,{children:"simple-bus"})," \u9a71\u52a8\u540e\u88ab\u89e6\u53d1\uff0c \u56e0\u6b64\u5728 ",(0,c.jsx)(n.code,{children:"simple_bus_post_build()"})," \u4e2d\u5904\u7406\u3002"]}),"\n",(0,c.jsxs)(n.p,{children:["U-Boot \u9636\u6bb5\u7684 MMC \u7ed1\u5b9a\u5728 ",(0,c.jsx)(n.code,{children:"initf_dm"})," \u4e2d\u8fdb\u884c\u3002"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:'simple_bus_post_bind(); // drivers/core/simple-bus.c\n|-> dm_scan_fdt_dev(dev); // drivers/core/root.c\n    |-> dm_scan_fdt_node();\n        |-> lists_bind_fdt(); // drivers/core/lists.c\n            |   // \u901a\u8fc7 compatible \u5339\u914d\u8bbe\u5907\u548c\u9a71\u52a8\n            |-> device_bind_with_driver_data();\n                |-> device_bind_common(); // drivers/core/device.c\n                    |-> uclass_get(&uc)\n                    |-> uclass_bind_device(dev)\n                    |-> drv->bind(dev)\n                        aic_dwmmc_bind(dev);\n                            |\n         +------------------+\n         |\naic_dwmmc_bind(dev); // drivers/mmc/artinchip_dw_mmc.c\n|-> dwmci_bind(dev, ...); // drivers/mmc/dw_mmc.c\n    |\n    |-> mmc_bind(dev, &plat->mmc, &plat->cfg); // drivers/mmc/mmc-uclass.c\n        |  // \u7ed1\u5b9a\u4e00\u4e2a IF_TYPE_MMC \u7684 Block \u5b50\u8bbe\u5907\uff0c\u8fd9\u6837\u53ef\u4ee5\u901a\u8fc7\u5757\u8bbe\u5907\u7684\u63a5\u53e3\n        |  // \u4f7f\u7528 MMC\u3002\n        |\n        |-> blk_create_devicef(dev, "mmc_blk", "blk",IF_TYPE_MMC, devnum,\n        |   |                   512, 0, &bdev); // drivers/block/blk-uclass.c\n        |   |-> blk_create_device(parent, "mmc_blk", dev_name, if_type,\n        |       |                   devnum, blksz, lba, devp);\n        |       |-> device_bind_driver(parent, drv_name, name, &dev);\n        |           |   // drivers/core/lists.c\n        |           |-> ....\n        |               |-> device_bind_common(dm_root, ...);\n        |                   |-> uclass_get(drv->id, &uc); id = UCLASS_BLK\n        |                   |-> dev = calloc(1, sizeof(struct udevice));\n        |                   |   dev->name = name; // \u5757\u8bbe\u5907\u540d\u5b57\n        |                   |   dev->parent = parent; // \u6307\u5411 MMC \u8bbe\u5907\n        |                   |   dev->driver = drv; // "mmc_blk" driver\n        |                   |   dev->uclass = uc; // UCLASS_BLK\n        |                   |   // \u521b\u5efa\u8bbe\u5907 mmc_blk\n        |                   |\n        |                   |-> uclass_bind_device(dev);\n        |                       // \u5c06\u8bbe\u5907\u6dfb\u52a0\u5230 UCLASS_BLK \u5217\u8868\u4e2d\n        |\n        |-> dev_get_uclass_platdata(bdev);\n'})}),"\n",(0,c.jsx)(n.h4,{id:"732-probe-\u6d41\u7a0b",children:"7.3.2. Probe \u6d41\u7a0b"}),"\n",(0,c.jsxs)(n.p,{children:["SPL \u4e2d\u7684 Probe \u6d41\u7a0b\u5982\u4e0b\u3002\u7531\u4e8e BLK \u8bbe\u5907\u7684 probe \u7684\u76ee\u7684\u662f\u8c03\u7528 ",(0,c.jsx)(n.code,{children:"mmc_init()"})," \uff0c \u8fd9\u91cc\u76f4\u63a5\u8c03\u7528\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u5355\u72ec\u7684 Probe \u4e86\u3002"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"spl_mmc_load(); // common/spl/spl_mmc.c\n|-> spl_mmc_find_device(&mmc, bootdev->boot_device);\n|   |-> mmc_initialize(NULL); // drivers/mmc/mmc.c\n|   |   |-> mmc_probe(bis);\n|           |-> uclass_get(UCLASS_MMC, &uc);\n|           |-> device_probe(dev); // drivers/core/device.c\n|               |  // \u8fd9\u91cc\u5bf9 UCLASS_MMC \u5217\u8868\u4e2d\u7684\u8bbe\u5907\u9010\u4e2a\u8c03\u7528\n|               |  // device_probe(dev)\n|               |\n|               |--\x3e aic_dwmmc_probe(...) // \u5177\u4f53\u9a71\u52a8\u7684 probe\n|\n|-> mmc_init(mmc);\n"})}),"\n",(0,c.jsx)(n.p,{children:"U-Boot \u4e2d MMC \u8bbe\u5907\u548c\u5bf9\u5e94\u7684 BLK \u8bbe\u5907 Probe \u6d41\u7a0b\u5982\u4e0b\u3002"}),"\n",(0,c.jsxs)(n.p,{children:["MMC \u8bbe\u5907\u7684 Probe \u5728 ",(0,c.jsx)(n.code,{children:"board_init_r()"})," \u8c03\u7528 ",(0,c.jsx)(n.code,{children:"initr_mmc()"})," \u65f6\u8fdb\u884c\u3002\u5bf9\u5e94\u7684 BLK \u8bbe\u5907\u7684 Probe \u5728\u7b2c\u4e00\u6b21\u4f7f\u7528\u65f6\u8fdb\u884c\uff0c\u901a\u5e38\u662f ",(0,c.jsx)(n.code,{children:"initr_env()"})," \uff0c\u8be5\u51fd\u6570\u52a0\u8f7d MMC \u4e0a\u7684\u73af\u5883\u53d8\u91cf\u3002"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"board_init_r(gd_t *new_gd, ulong dest_addr)\n|-> ...\n|-> initr_dm(void)\n|-> ...\n|-> initr_mmc(void)\n|-> initr_env(void)\ninitr_mmc(void)\n|-> mmc_initialize(gd->bd); // drivers/mmc/mmc.c\n    |-> mmc_probe(bis = gd->bd);\n        |-> uclass_get(UCLASS_MMC, &uc);\n        |-> device_probe(dev); // drivers/core/device.c\n            |  // \u8fd9\u91cc\u5bf9 UCLASS_MMC \u5217\u8868\u4e2d\u7684\u8bbe\u5907\u9010\u4e2a\u8c03\u7528\n            |  // device_probe(dev)\n            |\n            |--\x3e aic_dwmmc_probe(...) // \u5177\u4f53\u9a71\u52a8\u7684 probe\ninitr_env(void) // common/board_r.c\n|\n|-> env_relocate(void) // env/common.c\n    |-> env_load(void) // env/env.c\n        | // \u8fd9\u4e2a\u51fd\u6570\u6267\u884c\u8bfb\u53d6\u73af\u5883\u53d8\u91cf\u7684\u52a8\u4f5c\n        |\n        |-> drv = env_driver_lookup(ENVOP_LOAD, prio)\n        |   // u-boot \u901a\u8fc7 U_BOOT_ENV_LOCATION \u5b8f\u5b9a\u4e49\u4e86\u5404\u79cd\u53ef\u4ee5\u7528\u4e8e\u52a0\u8f7d\n        |   // \u73af\u5883\u53d8\u91cf\u7684\u9a71\u52a8 (struct env_driver)\uff0c\u5e76\u4e14\u5728 lds \u4e2d\u5c06\u8fd9\u4e9b\n        |   // \u9a71\u52a8\u6536\u96c6\u5230\u4e00\u4e2a\u56fa\u5b9a\u7684\u6bb5\u4e2d\uff0c\u8fd9\u91cc\u904d\u5386\u5404\u4e2a\u9a71\u52a8\uff0c\u5c1d\u8bd5\u52a0\u8f7d ENV\n        |\n        |-> drv->load()/env_mmc_load(void) // env/mmc.c\n            env_mmc_load();\n                    |\n    +---------------+\n    |\nenv_mmc_load(); // env/mmc.c\n|--\x3e devno = mmc_get_env_dev();\n|--\x3e mmc = find_mmc_device(devno);\n     |--\x3e init_mmc_for_env(mmc)\n          |--\x3e blk_get_from_parent(mmc->dev, &dev)\n               |--\x3e device_find_first_child(parent, &blkdev);\n               |    // \u83b7\u53d6 mmc_blk \u8bbe\u5907\n               |\n               |--\x3e device_probe(blkdev)\n                    |--\x3e mmc_blk_probe(...) // drivers/mmc/mmc-uclass.c\n                         |--\x3e mmc_init(mmc) // drivers/mmc/mmc.c\n"})}),"\n",(0,c.jsx)(n.h4,{id:"733-\u8bfb\u5199\u6d41\u7a0b",children:"7.3.3. \u8bfb\u5199\u6d41\u7a0b"}),"\n",(0,c.jsx)(n.p,{children:"\u901a\u8fc7 BLK \u63a5\u53e3\u5bf9 MMC \u8fdb\u884c\u8bfb\u5199\u7684\u8c03\u7528\u6d41\u7a0b\u5982\u4e0b\u3002"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"blk_dread(mmc_get_blk_desc(mmc), blk, cnt, addr);\n|    // drivers/block/blk-uclass.c\n|\n|--\x3e ops->read(dev, start, blkcnt, buffer);\n     mmc_bread(dev, start, blkcnt, buffer); // drivers/mmc/mmc.c\n     |--\x3e mmc_read_blocks(mmc, dst, start, cur); // drivers/mmc/mmc.c\n          |--\x3e mmc_send_cmd(mmc, &cmd, &data) //drivers/mmc/mmc-uclass.c\n               |--\x3e ops->send_cmd(dev, cmd, data);\n                    dwmci_send_cmd(dev, cmd, data); // drivers/mmc/dw_mmc.c\nblk_dwrite(mmc_get_blk_desc(mmc), blk, cnt, addr);\n|    // drivers/block/blk-uclass.c\n|\n|--\x3e ops->write(dev, start, blkcnt, buffer);\n     mmc_bwrite(dev, start, blkcnt, buffer); // drivers/mmc/mmc_write.c\n     |-> mmc_write_blocks(mmc, start, cur, src); // drivers/mmc/mmc_write.c\n          |--\x3e mmc_send_cmd(mmc, &cmd, &data) //drivers/mmc/mmc-uclass.c\n               |--\x3e ops->send_cmd(dev, cmd, data);\n                    dwmci_send_cmd(dev, cmd, data); // drivers/mmc/dw_mmc.c\n"})})]})}function m(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(a,{...e})}):a(e)}},1151:(e,n,d)=>{d.d(n,{Z:()=>l,a:()=>r});var c=d(7294);const i={},s=c.createContext(i);function r(e){const n=c.useContext(s);return c.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),c.createElement(s.Provider,{value:n},e.children)}}}]);